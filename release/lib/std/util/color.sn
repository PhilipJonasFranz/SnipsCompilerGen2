/*
 * [BASE-PACKAGE]
 *
 * This package contains utility related to rgba-coloring.
 */
namespace Colors {

	/*
	 * Holds a single integer value that encodes r, g, b, and a channel.
	 */
	restricted struct Color {
		int rgba;
	}

	/*
	 * Create a new color object, trunk given parameters in single integer.
	 */
	shared Color* create(int r, int g, int b, int a) {
		int rgba = (r << 24) + (g << 16) + (b << 8) + a;
		return init<>(Color::(rgba));
	}
	
	/*
	 * Get the amount of red in the color.
	 */
	shared int getRed(Color* c) {
		return (c->rgba >> 24);
	}
	
	/*
	 * Get the amount of green in the color.
	 */
	shared int getGreen(Color* c) {
		return (c->rgba >> 16) & hxff;
	}
	
	/*
	 * Get the amount of blue in the color.
	 */
	shared int getBlue(Color* c) {
		return (c->rgba >> 8) & hxff;
	}
	
	/*
	 * Get the amount of alpha in the color.
	 */
	shared int getAlpha(Color* c) {
		return c->rgba & hxff;
	}

} 
