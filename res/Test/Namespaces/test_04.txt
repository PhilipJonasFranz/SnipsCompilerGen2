SOURCE
namespace Foo {
	int x = 15;
	
	struct Bar {
		int k;
	}
	
	namespace Baz {
		int x = 10;
		
		int get(Bar bar) {
			return sizeof(bar) << 1;
		}
	}
	
	int get(Bar bar) {
		return bar.k;
	}
	
}

int main() {
	Bar bar = Bar::(5);
	return Foo::get(bar) + Foo::Baz::x;
}

TESTCASES
15
OUTPUT
/* --test_04.txt */
.data
Foo.x: .word 15
Foo.Baz.x: .word 10
    
.text
    b main
    
Foo.get:                                     /* Function: Foo.get */
    ldr r0, [sp, #4]                         /* Load field from struct */
    add sp, sp, #8
    bx lr
    
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    mov r0, #5                               /* Evaluate Expression */
    push { r0 }
    mov r0, #1
    push { r0 }
    ldr r0, [fp, #-4]                        /* Evaluate Expression */
    ldr r1, [fp, #-8]
    push { r1, r0 }
    bl Foo.get                               /* Call Foo.get */
    mov r1, r0
    ldr r2, .POOL0_main.L1_Foo.Baz.x         /* Load from .data section */
    ldr r2, [r2]
    add r0, r0, r2
    mov sp, fp
    pop { fp, pc }
.POOL0_main.L1_Foo.Baz.x: .word Foo.Baz.x
    
