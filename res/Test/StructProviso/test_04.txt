SOURCE
struct TreeNode<T> {
	TreeNode<T>* left;
	TreeNode<T>* right;
	T value;
}

int main() {
	TreeNode<int>* root = (TreeNode<int>*) resv(sizeof(TreeNode<int>));
	*root = TreeNode<int>::((TreeNode<int>*) 0, (TreeNode<int>*) 0, 10);
	
	TreeNode<bool>* root2 = (TreeNode<bool>*) resv(sizeof(TreeNode<bool>));
	*root2 = TreeNode<bool>::((TreeNode<bool>*) 0, (TreeNode<bool>*) 0, true);
	
	TreeNode<int>* root3 = (TreeNode<int>*) resv(sizeof(TreeNode<int>));
	*root3 = TreeNode<int>::((TreeNode<int>*) 0, (TreeNode<int>*) 0, 15);
	
	root->right = root3;
	
	TreeNode<int>* root4 = (TreeNode<int>*) resv(sizeof(TreeNode<int>));
	*root4 = TreeNode<int>::((TreeNode<int>*) 0, (TreeNode<int>*) 0, 12);
	
	root->right->left = root4;
	
	return root->value + root->right->value + root->right->left->value;
}
TESTCASES
37