SOURCE
struct Foo {
	int value;
}

struct Nib<T> {
	T val;
}

struct Data<T> {
	Nib<T> n0;
	Nib<T> n1;
}

int main() {
	Data<Foo> data = Data<Foo>::(Nib<Foo>::(Foo::(5)), Nib<Foo>::(Foo::(10)));
	return data.n0.val.value + data.n1.val.value;
}
TESTCASES
15
OUTPUT
/* --test_08.txt */
.data
HEAP_START: .word 0
    
.text
main:                         /* Function: main */
    mov fp, sp
    mov r0, #10               /* Evaluate Expression */
    push { r0 }
    mov r0, #5
    push { r0 }
    sub r1, fp, #8            /* Evaluate Expression */
    ldr r0, [r1]              /* Load field from struct */
    push { r0 }
    sub r1, fp, #8            /* Load field location */
    add r1, r1, #4
    ldr r0, [r1]              /* Load field from struct */
    mov r2, r0
    pop { r1 }
    add r0, r1, r2
    bx lr
    
.L0_HEAP_START: .word HEAP_START
