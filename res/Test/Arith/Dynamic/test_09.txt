SOURCE
struct Bar {
	int x;
	int y;
}

Bar baz() {
	Bar b = Bar::(3, 10);
	return b;
}

int[2] foo(int b) {
	int [2] x = {b, 5};
	return x;
}

int main(int a) {
	int[2] x0 = foo(a);
	int[2] x1 = foo(a * 2);
	Bar b0 = baz();
	return x0 [0] + x1 [0] + x1 [1] + b0.y;
}
TESTCASES
0 15
2 21
OUTPUT
/* --test_09.txt */
    b main
baz:                          /* Function: baz */
    push { fp }
    mov fp, sp
    mov r0, #10               /* Evaluate Expression */
    mov r1, #3
    push { r1, r0 }
    ldr r0, [fp, #-4]         /* Evaluate Expression */
    ldr r1, [fp, #-8]
    push { r1, r0 }
    mov r2, sp
    mov sp, fp
    pop { fp }
    sub r1, sp, #8            /* Copy return value from stack */
    ldr r0, [r2, #0]
    str r0, [r1, #0]
    ldr r0, [r2, #4]
    str r0, [r1, #4]
    bx lr
    
foo:                          /* Function: foo */
    push { r3, fp }
    mov fp, sp
    mov r3, r0
    mov r0, #5                /* Evaluate Expression */
    push { r0 }
    mov r0, r3
    push { r0 }
    ldr r0, [fp, #-4]         /* Evaluate Expression */
    ldr r1, [fp, #-8]
    push { r1, r0 }
    mov r2, sp
    mov sp, fp
    pop { r3, fp }
    sub r1, sp, #8            /* Copy return value from stack */
    ldr r0, [r2, #0]
    str r0, [r1, #0]
    ldr r0, [r2, #4]
    str r0, [r1, #4]
    bx lr
    
main:                         /* Function: main */
    push { r3, fp, lr }
    mov fp, sp
    mov r3, r0
    bl foo                    /* Call foo */
    sub sp, sp, #8
    mov r1, r3                /* Evaluate Expression */
    mov r2, #2
    mul r0, r1, r2
    bl foo                    /* Call foo */
    sub sp, sp, #8
    bl baz                    /* Evaluate Expression */
    sub sp, sp, #8
    sub r0, fp, #8
    add r0, r0, #0
    ldr r0, [r0]
    push { r0 }
    sub r0, fp, #16
    add r0, r0, #0
    ldr r0, [r0]
    mov r2, r0
    pop { r1 }
    add r0, r1, r2
    push { r0 }
    sub r0, fp, #16
    add r0, r0, #4
    ldr r0, [r0]
    mov r2, r0
    pop { r1 }
    add r0, r1, r2
    push { r0 }
    sub r1, fp, #24           /* Load field location */
    add r1, r1, #4
    ldr r0, [r1]              /* Load field from struct */
    mov r2, r0
    pop { r1 }
    add r0, r1, r2
    mov sp, fp
    pop { r3, fp, lr }
    bx lr
    
