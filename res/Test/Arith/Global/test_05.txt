DESCRIPTION
This test verifies global variable initialization.
SOURCE
struct S {
	int x;
	int y;
}

bool sw = true;

S s0 = S::(10, 5);

S s1 = (sw)? S::(s0.y, 2) : s0;

int main(int a) {
	return a * (s0.x + s0.y);
}
TESTCASES
0 0
1 15
-2 -30
OUTPUT
/* --test_05.txt */
.data
sw: .word 1
s0: .skip 12
s1: .skip 12
    
.text
/* Initialize the global variables */
    push { r0, r1, r2 }
    mov r0, #5
    mov r1, #10
    push { r1, r0 }
    mov r0, #1
    ldr r1, .POOL0_main.L1_s0                /* Load from .data section */
    str r0, [r1, #0]
    pop { r0 }
    str r0, [r1, #4]
    pop { r0 }
    str r0, [r1, #8]
    ldr r0, .POOL0_main.L0_sw                /* Load from .data section */
    ldr r0, [r0]
    cmp r0, #0
    beq main.L2
    mov r0, #2
    push { r0 }
    ldr r1, .POOL0_main.L1_s0                /* Load field location */
    add r1, r1, #8
    ldr r0, [r1]                             /* Load field from struct */
    push { r0 }
    mov r0, #1
    push { r0 }
    b main.L3
main.L2: 
    ldr r2, .POOL0_main.L1_s0                /* Load data section address */
    add r2, r2, #8
    ldr r0, [r2] #-4
    ldr r1, [r2] #-4
    push { r1, r0 }
    ldr r0, [r2] #-4
main.L3: 
    ldr r1, .POOL0_main.L2_s1                /* Load from .data section */
    pop { r0 }
    str r0, [r1, #0]
    pop { r0 }
    str r0, [r1, #4]
    pop { r0 }
    str r0, [r1, #8]
    pop { r0, r1, r2 }
main:                                        /* Function: main */
    push { r3 }
    mov r3, r0
    ldr r1, .POOL0_main.L1_s0                /* Evaluate Expression */
    add r1, r1, #4
    ldr r0, [r1]                             /* Load field from struct */
    push { r0 }
    ldr r1, .POOL0_main.L1_s0                /* Load field location */
    add r1, r1, #8
    ldr r2, [r1]                             /* Load field from struct */
    pop { r1 }
    add r2, r1, r2
    mul r0, r3, r2
    pop { r3 }
    bx lr
.POOL0_main.L2_s1: .word s1
.POOL0_main.L0_sw: .word sw
.POOL0_main.L1_s0: .word s0
    
