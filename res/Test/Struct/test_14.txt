SOURCE
struct Data<T> {
	T value;
	int v;
}

struct Cap<V> {
	V val;
}

int main(int x) {
	Cap<int> c0 = Cap<int>::(5);
	Cap<bool> c1 = Cap<bool>::(true);

	Data<Cap<int[2]>> data = Data<Cap<int[2]>>::(Cap<int[2]>::({x, x * 2}), 4);
	return (c1.val)? data.value.val [1] + data.v : c0.val;
}
TESTCASES
0 4
1 6
2 8
OUTPUT
/* --test_14.txt */
main:                                        /* Function: main */
    mov fp, sp
    mov r3, r0
    mov r0, #5                               /* Evaluate Expression */
    push { r0 }
    mov r0, #2
    push { r0 }
    mov r0, #1                               /* Evaluate Expression */
    push { r0 }
    mov r0, #2
    push { r0 }
    mov r0, #4                               /* Evaluate Expression */
    push { r0 }
    mov r2, #2
    mul r0, r3, r2
    push { r0 }
    push { r3 }
    mov r0, #2
    push { r0 }
    mov r0, #1
    push { r0 }
    ldr r0, [fp, #-12]                       /* Load field from struct */
    cmp r0, #0
    beq main.L0
    ldr r1, [fp, #-24]                       /* Load field from struct */
    ldr r2, [fp, #-20]                       /* Load field from struct */
    add r0, r1, r2
    b main.L1
main.L0: 
    ldr r0, [fp, #-4]                        /* Load field from struct */
main.L1: 
    mov sp, fp
    bx lr
    
