SOURCE
struct Data<T> {
	T value;
	int v;
}

struct Cap<V> {
	V val;
}

int main(int x) {
	Cap<int> c0 = Cap<int>::(5);
	Cap<bool> c1 = Cap<bool>::(true);

	Data<Cap<int[2]>> data = Data<Cap<int[2]>>::(Cap<int[2]>::({x, x * 2}), 4);
	return data.value.val [1] + data.v;
}
TESTCASES
0 4
1 6
2 8
OUTPUT
/* --test_14.txt */
.data
HEAP_START: .word 0
    
.text
main:                         /* Function: main */
    push { r3 }
    mov fp, sp
    mov r3, r0
    mov r0, #4                /* Evaluate Expression */
    push { r0 }
    mov r1, r3
    mov r2, #2
    mul r0, r1, r2
    push { r0 }
    mov r0, r3
    push { r0 }
    sub r1, fp, #12           /* Evaluate Expression */
    mov r1, r1
    add r1, r1, #4
    ldr r0, [r1]              /* Load field from struct */
    push { r0 }
    sub r1, fp, #12           /* Load field location */
    add r1, r1, #8
    ldr r0, [r1]              /* Load field from struct */
    mov r2, r0
    pop { r1 }
    add r0, r1, r2
    mov sp, fp
    pop { r3 }
    bx lr
    
.L0_HEAP_START: .word HEAP_START
