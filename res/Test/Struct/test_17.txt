SOURCE
struct Data {
	int [3] arr;
}

int main(int x, int y) {
	Data [2] data = {Data::({1, 2, 3}), Data::({4, 5, 6})};
	data [0].arr [1] = 5;
	return data [y].arr [x];
}
TESTCASES
0 0 1
1 0 5
2 0 3
0 1 4
1 1 5
2 1 6
OUTPUT
/* --test_17.txt */
main:                                        /* Function: main */
    push { r3, r4 }
    mov fp, sp
    mov r3, r0
    mov r4, r1
    mov r0, #6                               /* Evaluate Expression */
    mov r1, #5
    mov r2, #4
    push { r2, r1, r0 }
    mov r0, #3
    mov r1, #2
    mov r2, #1
    push { r2, r1, r0 }
    mov r0, #5                               /* Evaluate Expression */
    push { r0 }                              /* Load field location */
    sub r1, fp, #24
    push { r1 }
    mov r2, #0                               /* Calculate offset of sub structure */
    mov r0, #0
    mov r1, #12
    mul r0, r0, r1
    add r2, r2, r0
    pop { r1 }
    add r1, r1, r2
    mov r1, r1
    add r1, r1, #4
    pop { r0 }
    str r0, [r1]                             /* Store value to struct field */
    sub r1, fp, #24                          /* Evaluate Expression */
    push { r1 }
    mov r2, #0                               /* Calculate offset of sub structure */
    mov r0, r4
    mov r1, #12
    mul r0, r0, r1
    add r2, r2, r0
    pop { r1 }
    add r1, r1, r2
    lsl r2, r3, #2
    add r1, r1, r2
    ldr r0, [r1]                             /* Load field from struct */
    mov sp, fp
    pop { r3, r4 }
    bx lr
    
