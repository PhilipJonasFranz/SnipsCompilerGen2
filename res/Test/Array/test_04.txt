SOURCE
int bar(int [3] z) {
	return z [0] + z [1] + z [2];
}

int foo(int [3] x, int [3] y, int i) {
	return x [i] + bar(y) * 2;
}

int main(int b) {
	int [3] x = {1, 2, 3};
	int [3] y = {4, 5, 6};
	return foo(x, y, b);
}
TESTCASES
0 31
1 32
2 33
OUTPUT
/* --test_04.txt */
    b main
bar:                                         /* Function: bar */
    push { fp }
    mov fp, sp
    ldr r1, [fp, #4]
    ldr r2, [fp, #8]
    add r1, r1, r2
    ldr r2, [fp, #12]
    add r0, r1, r2
    mov sp, fp
    pop { fp }
    add sp, sp, #12
    bx lr
    
foo:                                         /* Function: foo */
    push { fp, lr }
    mov fp, sp
    lsl r2, r0, #2
    add r0, fp, #20
    ldr r0, [r0, r2]
    push { r0 }
    ldr r0, [fp, #16]                        /* Load parameters */
    ldr r1, [fp, #12]
    ldr r2, [fp, #8]
    push { r2, r1, r0 }
    bl bar                                   /* Call bar */
    pop { r1 }
    mov r2, #2
    mul r2, r0, r2
    add r0, r1, r2
    mov sp, fp
    pop { fp, lr }
    add sp, sp, #24
    bx lr
    
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    mov r3, r0
    mov r0, #3                               /* Evaluate Expression */
    mov r1, #2
    mov r2, #1
    push { r2, r1, r0 }
    mov r0, #6                               /* Evaluate Expression */
    mov r1, #5
    mov r2, #4
    push { r2, r1, r0 }
    ldr r0, [fp, #-4]                        /* Evaluate Expression */
    ldr r1, [fp, #-8]
    ldr r2, [fp, #-12]
    push { r2, r1, r0 }
    ldr r0, [fp, #-16]
    ldr r1, [fp, #-20]
    ldr r2, [fp, #-24]
    push { r2, r1, r0 }
    mov r0, r3
    bl foo                                   /* Call foo */
    mov sp, fp
    pop { fp, lr }
    bx lr
    
