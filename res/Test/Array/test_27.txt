SOURCE
int foo(int [2] [2] vec, int x, int y) {
	vec = {{1, 5}, {9, 2}};
	return vec [x] [y];
}

int main(int x, int y) { 
	int [2] [2] vec = {{3, 7}, {2, 0}};
	return foo(vec, x, y);
}
TESTCASES
0 0 1
0 1 5
1 0 9
1 1 2
OUTPUT
/* --test_27.txt */
    b main
foo:                                         /* Function: foo */
    push { r3, r4, fp }
    mov fp, sp
    mov r3, r0
    mov r4, r1
    mov r0, #2                               /* Evaluate Expression */
    mov r1, #9
    push { r1, r0 }
    mov r0, #5
    mov r1, #1
    push { r1, r0 }
    pop { r0 }
    add r1, fp, #12                          /* Start of structure in stack */
    str r0, [r1, #0]
    pop { r0 }
    str r0, [r1, #4]
    pop { r0 }
    str r0, [r1, #8]
    pop { r0 }
    str r0, [r1, #12]
    mov r2, #0                               /* Evaluate Expression */
    lsl r0, r3, #3
    add r2, r2, r0
    lsl r0, r4, #2
    add r2, r2, r0
    add r0, fp, #12
    ldr r0, [r0, r2]
    mov sp, fp
    pop { r3, r4, fp }
    add sp, sp, #16
    bx lr
    
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    mov r3, r0
    mov r4, r1
    mov r0, #0                               /* Evaluate Expression */
    mov r1, #2
    push { r1, r0 }
    mov r0, #7
    mov r1, #3
    push { r1, r0 }
    ldr r0, [fp, #-4]                        /* Evaluate Expression */
    ldr r1, [fp, #-8]
    ldr r2, [fp, #-12]
    push { r2, r1, r0 }
    ldr r0, [fp, #-16]
    push { r0 }
    mov r0, r3
    mov r1, r4
    bl foo                                   /* Call foo */
    mov sp, fp
    pop { fp, pc }
    
