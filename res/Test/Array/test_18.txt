SOURCE
int foo(int [2] [3] [2] m, int x, int y, int z) {
	m [0] [1] [1] = 8;
	
	return m [x] [y] [z];
}

int main(int x, int y, int z) {
	int [2] [3] [2] m = {{{1, 2}, {3, 4}, {5, 6}}, 
						 {{7, 8}, {9, 10}, {11, 12}}};
						 
	return foo(m, x, y, z);
}
TESTCASES
0 0 0 1
0 0 1 2
0 1 0 3
0 1 1 8
0 2 0 5
0 2 1 6
1 0 0 7
1 0 1 8
1 1 0 9
1 1 1 10
1 2 0 11
1 2 1 12
OUTPUT
/* --test_18.txt */
    b main
foo:                                         /* Function: foo */
    sub sp, sp, #16
    stmea sp, {R3-R5, FP}
    mov fp, sp
    mov r3, r0
    mov r4, r1
    mov r5, r2
    mov r1, #8
    str r1, [fp, #28]
    mov r2, #0                               /* Evaluate Expression */
    mov r1, #24
    mul r0, r3, r1
    add r2, r2, r0
    lsl r0, r4, #3
    add r2, r2, r0
    lsl r0, r5, #2
    add r2, r2, r0
    add r0, fp, #16
    ldr r0, [r0, r2]
    mov sp, fp
    ldmfd sp!, {R3-R5, FP}
    add sp, sp, #48
    bx lr
    
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    mov r3, r0
    mov r4, r1
    mov r5, r2
    mov r0, #12                              /* Evaluate Expression */
    mov r1, #11
    stmfd sp!, {R0, R1}
    mov r0, #10
    mov r1, #9
    stmfd sp!, {R0, R1}
    mov r0, #8
    mov r1, #7
    stmfd sp!, {R0, R1}
    mov r0, #6
    mov r1, #5
    stmfd sp!, {R0, R1}
    mov r0, #4
    mov r1, #3
    stmfd sp!, {R0, R1}
    mov r0, #2
    mov r1, #1
    stmfd sp!, {R0, R1}
    ldr r0, [fp, #-4]                        /* Evaluate Expression */
    ldr r1, [fp, #-8]
    ldr r2, [fp, #-12]
    stmfd sp!, {R0-R2}
    ldr r0, [fp, #-16]
    ldr r1, [fp, #-20]
    ldr r2, [fp, #-24]
    stmfd sp!, {R0-R2}
    ldr r0, [fp, #-28]
    ldr r1, [fp, #-32]
    ldr r2, [fp, #-36]
    stmfd sp!, {R0-R2}
    ldr r0, [fp, #-40]
    ldr r1, [fp, #-44]
    ldr r2, [fp, #-48]
    stmfd sp!, {R0-R2}
    mov r0, r3
    push { r5 }
    push { r4 }
    ldmfd sp!, {R1, R2}
    bl foo                                   /* Call foo */
    mov sp, fp
    ldmfd sp!, {FP, PC}
    
