SOURCE
int main(int x, int y, int z) {
	int [2] [3] [2] m = {{{1, 2}, {3, 4}, {5, 6}}, 
						 {{7, 8}, {9, 10}, {11, 12}}};
						 
	m [0] [1] [1] = 8;
						 
	return m [x] [y] [z];
}
TESTCASES
0 0 0 1
0 0 1 2
0 1 0 3
0 1 1 8
0 2 0 5
0 2 1 6
1 0 0 7
1 0 1 8
1 1 0 9
1 1 1 10
1 2 0 11
1 2 1 12
OUTPUT
/* --test_16.txt */
main:                                        /* Function: main */
    push { r3, r4, r5 }
    mov fp, sp
    mov r3, r0
    mov r4, r1
    mov r5, r2
    mov r0, #12                              /* Evaluate Expression */
    mov r1, #11
    push { r1, r0 }
    mov r0, #10
    mov r1, #9
    push { r1, r0 }
    mov r0, #8
    mov r1, #7
    push { r1, r0 }
    mov r0, #6
    mov r1, #5
    push { r1, r0 }
    mov r0, #4
    mov r1, #3
    push { r1, r0 }
    mov r0, #2
    mov r1, #1
    push { r1, r0 }
    mov r0, #8                               /* Evaluate Expression */
    push { r0 }
    mov r2, #0                               /* Calculate offset of sub structure */
    mov r0, #0
    mov r1, #24
    mul r0, r0, r1
    add r2, r2, r0
    mov r0, #1
    mov r1, #8
    mul r0, r0, r1
    add r2, r2, r0
    add r2, r2, #4
    sub r0, fp, #48
    add r0, r0, r2
    pop { r1 }
    str r1, [r0]
    mov r2, #0                               /* Evaluate Expression */
    mov r0, r3
    mov r1, #24
    mul r0, r0, r1
    add r2, r2, r0
    mov r0, r4
    mov r1, #8
    mul r0, r0, r1
    add r2, r2, r0
    lsl r0, r5, #2
    add r2, r2, r0
    sub r0, fp, #48
    add r0, r0, r2
    ldr r0, [r0]
    mov sp, fp
    pop { r3, r4, r5 }
    bx lr
    
