SOURCE
T add5<T>(T a) {
	return (T) ((int) a + 5);
}

int main(int x) {
	func pred = add5<int>;
	func pred0 = add5<bool>;
	
	bool b0 = pred0(false);
	
	return pred(x);
}
TESTCASES
0 5
1 6
OUTPUT
/* --test_03.txt */
    b main
lambda_add5_P0:                              /* Function address getter for predication */
    add r0, pc, #8
    mov pc, r10
add5_P0:                                     /* Function: add5, Provisos: INT | BOOL */
    add r0, r0, #5
    bx lr
    
main:                                        /* Function: main */
    push { lr }
    mov r3, r0
    add r10, pc, #8                          /* Evaluate Expression */
    b lambda_add5_P0
    mov r4, r0
    add r10, pc, #8                          /* Evaluate Expression */
    b lambda_add5_P0
    mov r10, #0
    mov r5, r0
    mov r0, #0                               /* Evaluate Expression */
    add lr, pc, #8
    mov pc, r5
    mov r0, r3                               /* Evaluate Expression */
    add lr, pc, #8
    mov pc, r4
    pop { pc }
     
