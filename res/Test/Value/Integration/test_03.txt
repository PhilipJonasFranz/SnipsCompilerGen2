SOURCE
int vecProd(int [3] m, int [3] n) {
	return (m [0] * n [0]) + 
		   (m [1] * n [1]) + 
		   (m [2] * n [2]);
}

int main() {
	int [3] m = {1, 2, 3};
	int [3] n = {4, 5, 6};
	return vecProd(m, n);
}
TESTCASES
32
OUTPUT
/* --test_03.txt */
    b main
vecProd@0:                                   /* Function: vecProd */
    ldr r0, [sp, #12]
    ldr r2, [sp]
    mul r1, r0, r2
    ldr r0, [sp, #16]
    ldr r2, [sp, #4]
    mul r2, r0, r2
    add r1, r1, r2
    ldr r0, [sp, #20]
    ldr r2, [sp, #8]
    mul r2, r0, r2
    add r0, r1, r2
    add sp, sp, #24
    bx lr
    
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    mov r0, #3                               /* Evaluate Expression */
    mov r1, #2
    mov r2, #1
    stmfd sp!, {r0-r2}
    mov r0, #6                               /* Evaluate Expression */
    mov r1, #5
    mov r2, #4
    stmfd sp!, {r0-r2}
    sub r0, fp, #4
    ldmfa r0, {r0-r2}
    stmfd sp!, {r0-r2}
    sub r0, fp, #16
    ldmfa r0, {r0-r2}
    stmfd sp!, {r0-r2}
    bl vecProd@0                             /* Call vecProd */
    mov sp, fp
    ldmfd sp!, {fp, pc}
    
