SOURCE
#include<linked_list.sn>

namespace GameObject {
	namespace Items {
		struct Inventory {
			int* start;
		}
		
		void set(Inventory* inv, int i, int val) {
			int* start = inv->start;
			*(start + i) = val;
		}
		
		int get(Inventory* inv, int i) {
			int* start = inv->start;
			return *(start + i);
		}
	}
	
	struct Player {
		int posX;
		int posY;
		Inventory* inv;
	}
}

namespace Util {
	/* A tuple containing two different value types */
	struct Tuple2<K, V> {
		K k;
		V v;
	}

	/* A contianer containing a value */
	struct Container<T> {
		T value;
	}
}

/* Inital Player data */
int [2] arr = {5, 8};

int main() {
	/* Initialize Inventory with size 10 */
	Inventory* inv = (Inventory*) resv(sizeof(Inventory));
	*inv = Inventory::((int*) resv(10));
	
	/* Initialize Player Object */
	Player* player = (Player*) resv(sizeof(Player));
	*player = Player::(arr [0], arr [1], inv);	

	Tuple2<int, int> point = Tuple2<int, int>::(player->posX, player->posY);

	Tuple2<Tuple2<int, int>, bool> tup = Tuple2<Tuple2<int, int>, bool>::(Tuple2<int, int>::(1, 3), true);
	
	Container<int> con = Container<int>::(tup.k.k + tup.k.v + (int) tup.v);
	Tuple2<Player*, Container<int>> sc = Tuple2<Player*, Container<int>>::(player, con);

	/* Set item at index 1 to 5 */
	GameObject::Items::set(player->inv, 1, con.value);

	LinkedList<int>* list = create<>(0);
	
	list->add<>(point.k);
	list->add<>(point.v);

	list->remove(0);
	
	return GameObject::Items::get(sc.k->inv, 1) + list->get<>(0) + sc.v.value;
}
TESTCASES
18
OUTPUT
.data
List.LinkedList: .word 0
List.ListNode: .word 0
Util.Container: .word 0
Util.Tuple2: .word 0
GameObject.Player: .word 0
GameObject.Items.Inventory: .word 0
NULL: .word 0
HEAP_START: .word 0
arr: .skip 8

.text
    b main_init
    
.global List.LinkedList.add_P_1
    
List.LinkedList.add_P_1:                     /* Function: List.LinkedList.add, Provisos: INT */
    mov r10, #0
    sub sp, sp, #16
    stmea sp, {r3-r5, lr}
    mov r3, r0
    mov r4, r1
    push { r4 }
    ldr r0, .POOL@1321795593_0_L2_NULL       /* Load null address */
    push { r0 }
    ldr r0, .POOL@1321795593_0_List.ListNode
    push { r0 }
    bl init_P_3                              /* Call init */
    mov r5, r0
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r0, [r1, #4]                         /* Load field from struct */
    ldr r1, .POOL@1321795593_0_L2_NULL       /* Load null address */
    cmp r0, r1
    bne List.LinkedList.add.L1
    lsl r1, r3, #2                           /* Convert to bytes */
    str r5, [r1, #4]                         /* Store value to struct field */
    mov r0, r5                               /* Evaluate Expression */
    lsl r1, r3, #2                           /* Convert to bytes */
    str r5, [r1, #8]                         /* Store value to struct field */
    b List.LinkedList.add.L0
List.LinkedList.add.L1: 
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r1, [r1, #8]
    lsl r1, r1, #2
    str r5, [r1, #4]                         /* Store value to struct field */
    lsl r1, r3, #2                           /* Convert to bytes */
    str r5, [r1, #8]                         /* Store value to struct field */
List.LinkedList.add.L0: 
    lsl r1, r3, #2                           /* Convert to bytes */
    add r1, r1, #12
    ldr r0, [r1]
    add r2, r0, #1
    str r2, [r1]
    ldmfd sp!, {r3-r5, pc}
    
.global List.LinkedList.get_P_1
List.LinkedList.get_P_1:                     /* Function: List.LinkedList.get, Provisos: INT */
    mov r10, #0
    sub sp, sp, #12
    stmea sp, {r3-r5}
    mov r3, r0
    mov r4, r1
    cmp r1, #0
    bge List.LinkedList.get.L0
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r0, [r1, #16]                        /* Load field from struct */
    b List.LinkedList.get.L7
List.LinkedList.get.L0: 
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r5, [r1, #4]                         /* Load field from struct */
List.LinkedList.get.L3:                      /* Evaluate condition */
    cmp r4, #0
    beq List.LinkedList.get.L4
    lsl r1, r5, #2                           /* Convert to bytes */
    ldr r0, [r1, #4]                         /* Load field from struct */
    ldr r1, .POOL@1321795593_0_L2_NULL       /* Load null address */
    cmp r0, r1
    bne List.LinkedList.get.L5
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r0, [r1, #16]                        /* Load field from struct */
    b List.LinkedList.get.L7
List.LinkedList.get.L5: 
    lsl r1, r5, #2                           /* Convert to bytes */
    ldr r5, [r1, #4]                         /* Load field from struct */
    mov r0, r4
    sub r4, r4, #1
    b List.LinkedList.get.L3
List.LinkedList.get.L4: 
    lsl r1, r5, #2                           /* Convert to bytes */
    ldr r0, [r1, #8]                         /* Load field from struct */
List.LinkedList.get.L7: 
    ldmfd sp!, {r3-r5}
    bx lr
    
.global List.LinkedList.remove_P_1
List.LinkedList.remove_P_1:                  /* Function: List.LinkedList.remove, Provisos: INT */
    mov r10, #0
    sub sp, sp, #16
    stmea sp, {r3-r5, lr}
    mov r3, r0
    mov r4, r1
    cmp r1, #0
    bge List.LinkedList.remove.L0
    ldmfd sp!, {r3-r5, pc}
List.LinkedList.remove.L0: 
    cmp r4, #0
    bne List.LinkedList.remove.L3
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r0, [r1, #4]                         /* Load field from struct */
    ldr r1, .POOL@1321795593_0_L2_NULL       /* Load null address */
    cmp r0, r1
    ldmfdeq sp!, {r3-r5, pc}
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r5, [r1, #4]                         /* Load field from struct */
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r1, [r1, #4]
    lsl r1, r1, #2
    ldr r0, [r1, #4]                         /* Load field from struct */
    lsl r1, r3, #2                           /* Convert to bytes */
    str r0, [r1, #4]                         /* Store value to struct field */
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r0, [r1, #8]                         /* Load field from struct */
    cmp r0, r5
    bne List.LinkedList.remove.L6
    ldr r0, .POOL@1321795593_0_L2_NULL       /* Evaluate Expression */
    lsl r1, r3, #2                           /* Convert to bytes */
    str r0, [r1, #8]                         /* Store value to struct field */
List.LinkedList.remove.L6: 
    mov r0, r5                               /* Load parameters */
    bl free                                  /* Call free */
    ldmfd sp!, {r3-r5, pc}
List.LinkedList.remove.L3: 
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r5, [r1, #4]                         /* Load field from struct */
    mov r0, r4
    sub r4, r4, #1
List.LinkedList.remove.L10:                  /* Evaluate condition */
    cmp r4, #0
    ble List.LinkedList.remove.L11
    lsl r1, r5, #2                           /* Convert to bytes */
    ldr r0, [r1, #4]                         /* Load field from struct */
    ldr r1, .POOL@1321795593_0_L2_NULL       /* Load null address */
    cmp r0, r1
    bne List.LinkedList.remove.L13
    ldmfd sp!, {r3-r5, pc}
List.LinkedList.remove.L13: 
    lsl r1, r5, #2                           /* Convert to bytes */
    ldr r5, [r1, #4]                         /* Load field from struct */
    mov r0, r4
    sub r4, r4, #1
    b List.LinkedList.remove.L10
List.LinkedList.remove.L11: 
    lsl r1, r5, #2                           /* Convert to bytes */
    ldr r0, [r1, #4]                         /* Load field from struct */
    ldr r1, .POOL@1321795593_0_L2_NULL       /* Load null address */
    cmp r0, r1
    bne List.LinkedList.remove.L16
    ldmfd sp!, {r3-r5, pc}
List.LinkedList.remove.L16: 
    lsl r1, r5, #2                           /* Convert to bytes */
    ldr r1, [r1, #4]
    lsl r1, r1, #2
    ldr r0, [r1, #4]                         /* Load field from struct */
    ldr r1, .POOL@1321795593_0_L2_NULL       /* Load null address */
    cmp r0, r1
    bne List.LinkedList.remove.L19
    lsl r1, r5, #2                           /* Convert to bytes */
    ldr r0, [r1, #4]                         /* Load field from struct */
    bl free                                  /* Call free */
    ldr r0, .POOL@1321795593_0_L2_NULL       /* Evaluate Expression */
    lsl r1, r5, #2                           /* Convert to bytes */
    str r0, [r1, #4]                         /* Store value to struct field */
    mov r0, r5                               /* Evaluate Expression */
    lsl r1, r3, #2                           /* Convert to bytes */
    str r5, [r1, #8]                         /* Store value to struct field */
    ldmfd sp!, {r3-r5, pc}
List.LinkedList.remove.L19: 
    lsl r1, r5, #2                           /* Convert to bytes */
    ldr r1, [r1, #4]
    lsl r1, r1, #2
    ldr r3, [r1, #4]                         /* Load field from struct */
    lsl r1, r5, #2                           /* Convert to bytes */
    ldr r0, [r1, #4]                         /* Load field from struct */
    bl free                                  /* Call free */
    mov r0, r3                               /* Evaluate Expression */
    lsl r1, r5, #2                           /* Convert to bytes */
    str r3, [r1, #4]                         /* Store value to struct field */
    ldmfd sp!, {r3-r5, pc}
    
.global List.LinkedList.create_P_1
List.LinkedList.create_P_1:                  /* Function: List.LinkedList.create, Provisos: INT */
    push { r3, lr }
    mov r3, r0
    push { r3 }
    mov r0, #0
    ldr r1, .POOL@1321795593_0_L2_NULL       /* Load null address */
    ldr r2, .POOL@1321795593_0_L2_NULL       /* Load null address */
    stmfd sp!, {r0-r2}
    ldr r0, .POOL@1321795593_0_List.LinkedList
    push { r0 }
    bl init_P_5                              /* Call init */
    ldmfd sp!, {r3, pc}
.POOL@1321795593_0_List.LinkedList: .word List.LinkedList
.POOL@1321795593_0_List.ListNode: .word List.ListNode
.POOL@1321795593_0_L2_NULL: .word NULL

.global GameObject.Items.set
GameObject.Items.set:                        /* Function: GameObject.Items.set */
    push { r4, r6 }
    mov r4, r1
    lsl r1, r0, #2                           /* Convert to bytes */
    ldr r6, [r1, #4]                         /* Load field from struct */
    add r0, r6, r4
    str r2, [r10, r0, lsl #2]
    ldmfd sp!, {r4, r6}
    bx lr
    
.global GameObject.Items.get
GameObject.Items.get:                        /* Function: GameObject.Items.get */
    push { r4, r5 }
    mov r4, r1
    lsl r1, r0, #2                           /* Convert to bytes */
    ldr r5, [r1, #4]                         /* Load field from struct */
    add r0, r5, r4
    ldr r0, [r10, r0, lsl #2]                /* Load from address */
    ldmfd sp!, {r4, r5}
    bx lr
    
/* A tuple containing two different value types */
    
/* A contianer containing a value */
    
/* Inital Player data */
    
.global main
    
/* Initialize the global variables */
main_init: 
    sub sp, sp, #12
    stmea sp, {r0-r2}
    mov r0, #8
    mov r1, #5
    stmfd sp!, {r0, r1}
    pop { r0 }
    ldr r1, .POOL@1630028086_0_L0_arr        /* Load from .data section */
    str r0, [r1]
    pop { r0 }
    str r0, [r1, #4]
    ldmfd sp!, {r0-r2}
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
/* Initialize Inventory with size 10 */
    mov r0, #2                               /* Evaluate Expression */
    bl resv                                  /* Call resv */
    mov r3, r0
    mov r0, #10                              /* Evaluate Expression */
    bl resv                                  /* Call resv */
    push { r0 }
    ldr r0, .POOL@1630028086_0_GameObject.Items.Inventory
    lsl r1, r3, #2
    str r0, [r1]
    pop { r0 }
    str r0, [r1, #4]
/* Initialize Player Object */
    mov r0, #4                               /* Evaluate Expression */
    bl resv                                  /* Call resv */
    mov r4, r0
    push { r3 }
    ldr r0, .POOL@1630028086_0_L0_arr        /* Load data section address */
    ldr r0, [r0, #4]
    push { r0 }
    ldr r0, .POOL@1630028086_0_L0_arr        /* Load data section address */
    ldr r0, [r0]
    push { r0 }
    ldr r0, .POOL@1630028086_0_GameObject.Player
    lsl r1, r4, #2
    str r0, [r1]
    pop { r0 }
    str r0, [r1, #4]
    pop { r0 }
    str r0, [r1, #8]
    pop { r0 }
    str r0, [r1, #12]
    lsl r1, r4, #2                           /* Convert to bytes */
    ldr r0, [r1, #8]                         /* Load field from struct */
    push { r0 }
    lsl r1, r4, #2                           /* Convert to bytes */
    ldr r0, [r1, #4]                         /* Load field from struct */
    push { r0 }
    ldr r0, .POOL@1630028086_0_Util.Tuple2
    push { r0 }
    mov r0, #1                               /* Evaluate Expression */
    push { r0 }
    mov r0, #3
    mov r1, #1
    ldr r2, .POOL@1630028086_0_Util.Tuple2
    stmfd sp!, {r0-r2}
    ldr r0, .POOL@1630028086_0_Util.Tuple2
    push { r0 }
    ldr r0, [fp, #-24]                       /* Load field from struct */
    ldr r2, [fp, #-20]                       /* Load field from struct */
    add r0, r0, r2
    ldr r2, [fp, #-16]                       /* Load field from struct */
    add r0, r0, r2
    push { r0 }
    ldr r0, .POOL@1630028086_0_Util.Container
    push { r0 }
    ldr r0, [fp, #-36]                       /* Evaluate Expression */
    ldr r1, [fp, #-40]
    stmfd sp!, {r0, r1}
    push { r4 }
    ldr r0, .POOL@1630028086_0_Util.Tuple2
    push { r0 }
/* Set item at index 1 to 5 */
    ldr r0, [fp, #-36]                       /* Load field from struct */
    push { r0 }
    mov r0, #1
    push { r0 }
    lsl r1, r4, #2                           /* Convert to bytes */
    ldr r0, [r1, #12]                        /* Load field from struct */
    ldmfd sp!, {r1, r2}
    bl GameObject.Items.set                  /* Call GameObject.Items.set */
    mov r0, #0                               /* Evaluate Expression */
    bl List.LinkedList.create_P_1            /* Call List.LinkedList.create */
    mov r3, r0
    ldr r1, [fp, #-8]                        /* Load field from struct */
    mov r0, r3
    bl List.LinkedList.add_P_1               /* Call List.LinkedList.add */
    ldr r1, [fp, #-4]                        /* Load field from struct */
    mov r0, r3
    bl List.LinkedList.add_P_1               /* Call List.LinkedList.add */
    mov r1, #0
    mov r0, r3
    bl List.LinkedList.remove_P_1            /* Call List.LinkedList.remove */
    mov r0, #1                               /* Evaluate Expression */
    push { r0 }
    ldr r1, [fp, #-52]
    lsl r1, r1, #2
    ldr r0, [r1, #12]                        /* Load field from struct */
    pop { r1 }
    bl GameObject.Items.get                  /* Call GameObject.Items.get */
    mov r4, r0
    mov r1, #0
    mov r0, r3
    bl List.LinkedList.get_P_1               /* Call List.LinkedList.get */
    add r0, r4, r0
    ldr r2, [fp, #-44]                       /* Load field from struct */
    add r0, r0, r2
    mov sp, fp
    ldmfd sp!, {fp, pc}
.POOL@1630028086_0_Util.Container: .word Util.Container
.POOL@1630028086_0_Util.Tuple2: .word Util.Tuple2
.POOL@1630028086_0_GameObject.Player: .word GameObject.Player
.POOL@1630028086_0_GameObject.Items.Inventory: .word GameObject.Items.Inventory
.POOL@1630028086_0_L0_arr: .word arr
