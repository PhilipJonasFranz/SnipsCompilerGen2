SOURCE
struct TreeNode<T> {
	TreeNode<T>* left;
	TreeNode<T>* right;
	T value;
}

int main() {
	TreeNode<int> root = TreeNode<int>::((TreeNode<int>*) 0, (TreeNode<int>*) 0, 10);
	
	TreeNode<bool> root2 = TreeNode<bool>::((TreeNode<bool>*) 0, (TreeNode<bool>*) 0, true);
	
	return root.value;
}
TESTCASES
10
OUTPUT
.version 21669356106

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
TreeNode_P_1: .word 0
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global main
main:                                        /* Function: main */
    mov fp, sp
    mov r0, #10                              /* Evaluate Expression */
    push { r0 }
    mov r0, #0
    push { r0 }
    mov r0, #0
    push { r0 }
    ldr r0, .P1584128079_TreeNode_P_1
    push { r0 }
    ldr r0, [fp, #-4]                        /* Load field from struct */
    bx lr
.P1584128079_TreeNode_P_1: .word TreeNode_P_1
