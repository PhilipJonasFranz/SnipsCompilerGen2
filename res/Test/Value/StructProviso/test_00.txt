SOURCE
struct TreeNode<T> {
	TreeNode<T>* left;
	TreeNode<T>* right;
	T value;
}

int main() {
	TreeNode<int> root = TreeNode<int>::((TreeNode<int>*) 0, (TreeNode<int>*) 0, 10);
	
	TreeNode<bool> root2 = TreeNode<bool>::((TreeNode<bool>*) 0, (TreeNode<bool>*) 0, true);
	
	return root.value;
}
TESTCASES
10
OUTPUT
.data
TreeNode: .word 0
NULL: .word 0
HEAP_START: .word 0

.text
    b main
    
.global main
main:                                        /* Function: main */
    mov fp, sp
    mov r0, #10                              /* Evaluate Expression */
    push { r0 }
    mov r0, #0
    push { r0 }
    mov r0, #0
    push { r0 }
    ldr r0, .POOL0_TreeNode
    push { r0 }
    mov r0, #1                               /* Evaluate Expression */
    push { r0 }
    mov r0, #0
    push { r0 }
    mov r0, #0
    push { r0 }
    ldr r0, .POOL0_TreeNode
    push { r0 }
    ldr r0, [fp, #-4]                        /* Load field from struct */
    bx lr
.POOL0_TreeNode: .word TreeNode
