SOURCE
struct TreeNode<T> {
	TreeNode<T>* left;
	TreeNode<T>* right;
	T value;
}

void insert<T>(TreeNode<T>* root, T value) {
	TreeNode<T>* new = (TreeNode<T>*) resv(sizeof(TreeNode<T>));
	return;
}

int main() {
	TreeNode<int>* root = (TreeNode<int>*) resv(sizeof(TreeNode<int>));
	*root = TreeNode<int>::((TreeNode<int>*) 0, (TreeNode<int>*) 0, 10);
	
	insert<int>(root, 15);
	
	return root->value;
}
TESTCASES
10
OUTPUT
.version 21402484840

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
TreeNode_P_1: .word 0
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global insert_P_1
insert_P_1:                                  /* Function: insert, Provisos: INT */
    mov r0, #4                               /* Evaluate Expression */
    b resv                                   /* Call resv */

.global main
main:                                        /* Function: main */
    push { lr }
    mov r0, #4                               /* Evaluate Expression */
    bl resv                                  /* Call resv */
    mov r3, r0
    mov r0, #10                              /* Evaluate Expression */
    push { r0 }
    mov r0, #0
    push { r0 }
    mov r0, #0
    push { r0 }
    ldr r0, .P1727273834_TreeNode_P_1
    lsl r1, r3, #2
    str r0, [r1]
    pop { r0 }
    str r0, [r1, #4]
    pop { r0 }
    str r0, [r1, #8]
    pop { r0 }
    str r0, [r1, #12]
    mov r1, #15
    mov r0, r3
    bl insert_P_1                            /* Call insert */
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r0, [r1, #12]                        /* Load field from struct */
    pop { pc }
.P1727273834_TreeNode_P_1: .word TreeNode_P_1
