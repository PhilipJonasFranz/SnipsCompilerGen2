SOURCE
T add5<T>(T a) {
	return (T) ((int) a + 5);
}

int main(int x) {
	func pred = add5<int>;
	func pred0 = add5<bool>;
	
	bool b0 = pred0(false);
	
	return pred(x);
}
TESTCASES
0 5
1 6
OUTPUT
.version 11247363394

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global add5_P_1
add5_P_1:                                    /* Function: add5, Provisos: INT | BOOL */
    add r0, r0, #5
    bx lr

.global main
main:                                        /* Function: main */
    push { lr }
    mov r3, r0
    ldr r4, .P136005061_add5_P_1             /* Evaluate Expression */
    ldr r5, .P136005061_add5_P_1             /* Evaluate Expression */
    mov r0, #0                               /* Evaluate Expression */
    add lr, pc, #8
    mov pc, r5
    mov r0, r3                               /* Evaluate Expression */
    add lr, pc, #8
    mov pc, r4
    pop { pc }
.P136005061_add5_P_1: .word add5_P_1
