SOURCE
int add5(int x) {
	return x + 5;
}

int get(int x, func pred) {
	return pred(x);
}

int main(int x) {
	func [1] pred = {add5};
	return get(x, pred [0]);
}
TESTCASES
0 5
1 6
OUTPUT
.version 10293848504

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global add5
add5:                                        /* Function: add5 */
    add r0, r0, #5
    bx lr

.global get
get:                                         /* Function: get */
    push { r4, lr }
    mov r4, r1
    add lr, pc, #8
    mov pc, r4
    ldmfd sp!, {r4, pc}

.global main
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    mov r3, r0
    ldr r0, .P610566569_add5                 /* Evaluate Expression */
    push { r0 }
    ldr r1, [fp, #-4]
    mov r0, r3
    bl get                                   /* Call get */
    mov sp, fp
    ldmfd sp!, {fp, pc}
.P610566569_add5: .word add5
