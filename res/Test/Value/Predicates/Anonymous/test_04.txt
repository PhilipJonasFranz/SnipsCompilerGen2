SOURCE
int f(int x) {
	return x * x;
}

int map(int x, func int -> int pred) {
	return pred(x);
}

int main() {
	int p = (int) f;
	func pred0 = (func) p;

	int y = map(10, pred0);

	return y;
}
TESTCASES
100
OUTPUT
.data
.text
    b main
    
lambda_f:                                    /* Function address getter for predication */
    add r0, pc, #8
    mov pc, r10
.global f
f:                                           /* Function: f */
    mul r0, r0, r0
    bx lr
    
.global map
map:                                         /* Function: map */
    push { r4, lr }
    mov r4, r1
    add lr, pc, #8
    mov pc, r4
    ldmfd sp!, {r4, pc}
    
.global main
main:                                        /* Function: main */
    add r10, pc, #8                          /* Evaluate Expression */
    b lambda_f
    mov r10, #0
    mov r1, r0
    mov r0, #10
    b map                                    /* Call map */
