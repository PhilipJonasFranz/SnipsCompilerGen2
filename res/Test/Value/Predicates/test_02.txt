SOURCE
int add5(int a) {
	return a + 5;
}

int main(int x) {
	func pred = add5;
	return pred(x);
}
TESTCASES
0 5
1 6
OUTPUT
.version 6146129581

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
lambda_add5: .word add5
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global add5
add5:                                        /* Function: add5 */
    add r0, r0, #5
    bx lr

.global main
main:                                        /* Function: main */
    push { lr }
    mov r3, r0
    ldr r0, .P107375910_lambda_add5          /* Evaluate Expression */
    ldr r4, [r0]
    mov r0, r3                               /* Evaluate Expression */
    add lr, pc, #8
    mov pc, r4
    pop { pc }
.P107375910_lambda_add5: .word lambda_add5
