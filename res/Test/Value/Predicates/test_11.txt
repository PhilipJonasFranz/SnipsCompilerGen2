SOURCE
T process<T>(T v, func T -> T pred) {
	return pred(v);
}

int main() {
	return process<int>(5, (int x -> int) : {
		return x + 12;
	});
}
TESTCASES
17
OUTPUT
.version 20775920955

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
lambda_ANON2: .word ANON2
lambda_process_P_1: .word process_P_1
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global process_P_1
process_P_1:                                 /* Function: process, Provisos: INT */
    push { r4, lr }
    mov r4, r1
    add lr, pc, #8
    mov pc, r4
    ldmfd sp!, {r4, pc}

.global ANON2
ANON2:                                       /* Function: ANON2 */
    add r0, r0, #12
    bx lr

.global main
main:                                        /* Function: main */
    ldr r0, .P966250440_lambda_ANON2         /* Evaluate Expression */
    ldr r1, [r0]
    mov r0, #5
    b process_P_1                            /* Call process */
.P966250440_lambda_ANON2: .word lambda_ANON2
