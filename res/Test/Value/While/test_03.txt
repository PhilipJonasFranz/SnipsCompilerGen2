SOURCE
int foo(int x) {
	return x + 2;
}

int main(int a) {
	int c = 0;
	while (a > 0) {
		if (a > 5) c = foo(c);
		if (a < 2) c = foo(c) - 3;
		a = a - 1;
	}
	return c;
}
TESTCASES
10 9
5 -1
15 19
0 0
OUTPUT
.version 16738408911

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global foo
foo:                                         /* Function: foo */
    add r0, r0, #2
    bx lr

.global main
main:                                        /* Function: main */
    push { lr }
    mov r3, r0
    mov r0, #0                               /* Evaluate Expression */
    mov r4, #0
main.L1:                                     /* Evaluate condition */
    cmp r3, #0
    ble main.L2
    cmp r3, #5
    ble main.L3
    mov r0, r4                               /* Evaluate Expression */
    bl foo                                   /* Call foo */
    mov r4, r0
main.L3: 
    cmp r3, #2
    bge main.L5
    mov r0, r4                               /* Evaluate Expression */
    bl foo                                   /* Call foo */
    sub r4, r0, #3
main.L5: 
    sub r3, r3, #1
    b main.L1
main.L2: 
    mov r0, r4                               /* Evaluate Expression */
    pop { pc }
