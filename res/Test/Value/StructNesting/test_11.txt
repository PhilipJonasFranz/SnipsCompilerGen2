DESCRIPTION
Tests that inherited struct nested functions can be called correctly.
SOURCE
namespace C {

	struct B<K:void> {
		K k;
		
		void incr<K>() {
			self->k += 1;
		}
	}

	struct A<T> : B<T> {
		T* r;

		void set<T>(T* t0) {
			self->r = t0;
		}

		void pipe<T>(func int -> int pred) {
			*self->r = pred(*self->r);
		}
	}
}

namespace Predicates {

	int add5(int a) {
		return a + 5;
	}

	int mul(int x, int y) {
		return x * y;
	}
}

void set(A<int>* a, int x) {
	int* p = resv(1);
	a->r = p;
	*a->r = x;
}

int main() {
	C::A<int>* a = init<>(A<>::(12, 0));
	
	/* a->r = 4 */
	set(a, 4);

	a->pipe<>(Predicates::add5);

	func pred = Predicates::mul;
	*a->r = pred(*a->r, a->k);

	/* Call from B inherited nested function */
	a->incr();
	
	return a->k + *a->r;
}
TESTCASES
121
OUTPUT
.version 24873932926

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
C.A_P_1: .word C.B_P_1
C.B_P_1: .word 0
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global C.A.incr_P_1
C.A.incr_P_1:                                /* Function: C.A.incr, Provisos: INT */
    lsl r1, r0, #2                           /* Convert to bytes */
    add r1, r1, #4
    ldr r2, [r1]
    add r0, r2, #1
    str r0, [r1]                             /* Store value to struct field */
    bx lr

.global C.A.pipe_P_1
C.A.pipe_P_1:                                /* Function: C.A.pipe, Provisos: INT */
    sub sp, sp, #12
    stmea sp, {r3, r4, lr}
    mov r3, r0
    mov r4, r1
    lsl r1, r0, #2                           /* Convert to bytes */
    ldr r0, [r1, #8]                         /* Load field from struct */
    ldr r0, [r10, r0, lsl #2]                /* Load from address */
    add lr, pc, #8
    mov pc, r4
    lsl r1, r3, #2                           /* Convert to bytes */
    push { r0 }
    ldr r0, [r1, #8]                         /* Load field from struct */
    lsl r1, r0, #2
    pop { r0 }
    str r0, [r1]
    ldmfd sp!, {r3, r4, pc}

.global Predicates.add5
lambda_Predicates.add5:                      /* Function address getter for predication */
    add r0, pc, #8
    mov pc, r10
Predicates.add5:                             /* Function: Predicates.add5 */
    add r0, r0, #5
    bx lr

.global Predicates.mul
lambda_Predicates.mul:                       /* Function address getter for predication */
    add r0, pc, #8
    mov pc, r10
Predicates.mul:                              /* Function: Predicates.mul */
    mul r0, r0, r1
    bx lr

.global set
set:                                         /* Function: set */
    sub sp, sp, #12
    stmea sp, {r3, r4, lr}
    mov r3, r0
    mov r4, r1
    mov r0, #1                               /* Evaluate Expression */
    bl resv                                  /* Call resv */
    lsl r1, r3, #2                           /* Convert to bytes */
    str r0, [r1, #8]                         /* Store value to struct field */
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r0, [r1, #8]                         /* Load field from struct */
    str r4, [r10, r0, lsl #2]
    ldmfd sp!, {r3, r4, pc}

.global main
main:                                        /* Function: main */
    push { lr }
    mov r0, #0                               /* Evaluate Expression */
    mov r1, #12
    stmfd sp!, {r0, r1}
    ldr r0, .P187122463_C.A_P_1
    push { r0 }
    bl init_P_3                              /* Call init */
    mov r3, r0
/* a->r = 4 */
    mov r1, #4
    mov r0, r3
    bl set                                   /* Call set */
    add r10, pc, #8                          /* Load parameters */
    b lambda_Predicates.add5
    mov r10, #0
    mov r1, r0
    mov r0, r3
    bl C.A.pipe_P_1                          /* Call C.A.pipe */
    add r10, pc, #8                          /* Evaluate Expression */
    b lambda_Predicates.mul
    mov r10, #0
    mov r4, r0
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r0, [r1, #4]                         /* Load field from struct */
    push { r0 }
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r0, [r1, #8]                         /* Load field from struct */
    pop { r1 }
    ldr r0, [r10, r0, lsl #2]                /* Load from address */
    add lr, pc, #8
    mov pc, r4
    lsl r1, r3, #2                           /* Convert to bytes */
    push { r0 }
    ldr r0, [r1, #8]                         /* Load field from struct */
    lsl r1, r0, #2
    pop { r0 }
    str r0, [r1]
/* Call from B inherited nested function */
    mov r0, r3                               /* Load parameters */
    bl C.A.incr_P_1                          /* Call C.A.incr */
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r0, [r1, #4]                         /* Load field from struct */
    lsl r1, r3, #2                           /* Convert to bytes */
    push { r0 }
    ldr r0, [r1, #8]                         /* Load field from struct */
    pop { r1 }
    ldr r2, [r10, r0, lsl #2]                /* Load from address */
    add r0, r1, r2
    pop { pc }
.P187122463_C.A_P_1: .word C.A_P_1
