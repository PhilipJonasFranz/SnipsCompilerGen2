SOURCE
#include<collection.sn>
#include<linked_list.sn>

int getSum(Collection<int> it) {
	int size = it.size();
	
	int s = 0;
	for (int i = 0; i < size; i++) 
		s += it.get<int>(i);
		
	return s;
}

int main(bool b) {
	LinkedList<int>* l = LinkedList::create<int>(0);
	
	l->add<int>(15);
	l->add<int>(6);
	l->add<int>(2);
	
	Collection<int> it = l;
	
	it.set<int>(1, 9);
	
	return getSum(it);
}
TESTCASES
26
OUTPUT
.version 13828300526

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s
.include linked_list.s
.include collection.s

.data
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global getSum
getSum:                                      /* Function: getSum */
    sub sp, sp, #20
    stmea sp, {r3-r6, lr}
    mov r3, r0
    mov r12, #0                              /* Offset to Collection.size */
    push { r12 }
    ldr r12, [r10, r0, lsl #2]
    ldr r12, [r12, #4]
    ldr r10, .P567081186_Collection_P_1
    add lr, pc, #8
    mov pc, r12
    mov r4, r0
    mov r5, #0
    mov r6, #0
getSum.L1: 
    cmp r6, r4
    bge getSum.L2
    mov r0, r3
    mov r1, r6
    mov r12, #4                              /* Offset to Collection.get */
    push { r12 }
    ldr r12, [r10, r0, lsl #2]
    ldr r12, [r12, #4]
    ldr r10, .P567081186_Collection_P_1
    add lr, pc, #8
    mov pc, r12
    add r5, r5, r0
    add r6, r6, #1
    b getSum.L1
getSum.L2: 
    mov r0, r5                               /* Evaluate Expression */
    ldmfd sp!, {r3-r6, pc}
.P567081186_Collection_P_1: .word Collection_P_1

.global main
main:                                        /* Function: main */
    push { lr }
    mov r0, #0                               /* Evaluate Expression */
    bl List.LinkedList.create_P_1            /* Call List.LinkedList.create */
    mov r4, r0
    mov r1, #15
    mov r0, r4
    bl List.LinkedList.add_P_1               /* Call List.LinkedList.add */
    mov r1, #6
    mov r0, r4
    bl List.LinkedList.add_P_1               /* Call List.LinkedList.add */
    mov r1, #2
    mov r0, r4
    bl List.LinkedList.add_P_1               /* Call List.LinkedList.add */
    mov r5, r4
    mov r0, #9                               /* Load parameters */
    push { r0 }
    mov r0, #1
    push { r0 }
    mov r0, r5
    ldmfd sp!, {r1, r2}
    mov r12, #8                              /* Offset to Collection.set */
    push { r12 }
    ldr r12, [r10, r0, lsl #2]
    ldr r12, [r12, #4]
    ldr r10, .P567081187_Collection_P_1
    add lr, pc, #8
    mov pc, r12
    mov r0, r5                               /* Evaluate Expression */
    bl getSum                                /* Call getSum */
    pop { pc }
.P567081187_Collection_P_1: .word Collection_P_1
