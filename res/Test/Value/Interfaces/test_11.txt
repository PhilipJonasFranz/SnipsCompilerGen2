SOURCE
interface Getter {

	int get();

}

struct A : Getter {
	int val;
	
	int get() {
		return self->val;
	}
}

struct B : A {
	int val2;
	
	int get() {
		return self->val2;
	}
}

int main(int a) {
	B* b = init<>(B::(10, 16));
	Getter g = b;
	
	return g.get();
}

TESTCASES
16
OUTPUT
.version 0

.include maybe resv.s
.include maybe init.s

.data
B: .word A
B_resolver_relay: .word B_resolver
A: .word 0
A_resolver_relay: .word A_resolver
Getter: .word 0
NULL: .word 0
HEAP_START: .word 0

.text
    b main

.global A.get
A.get:                                       /* Function: A.get */
    mov r10, #0
    lsl r1, r0, #2                           /* Convert to bytes */
    ldr r0, [r1, #4]                         /* Load field from struct */
    bx lr

A_Getter:                                    /* Relay: Getter -> A */
    mov r10, #0
    pop { r12 }
    add r12, r12, #4
    add pc, pc, r12
    b A.get

A_resolver:                                  /* Relay: A -> INTF */
    ldr r12, .P1254180810_Getter
    cmp r10, r12
    beq A_Getter
.P1254180810_Getter: .word Getter

.global B.get
B.get:                                       /* Function: B.get */
    mov r10, #0
    lsl r1, r0, #2                           /* Convert to bytes */
    ldr r0, [r1, #8]                         /* Load field from struct */
    bx lr

B_Getter:                                    /* Relay: Getter -> B */
    mov r10, #0
    pop { r12 }
    add r12, r12, #4
    add pc, pc, r12
    b B.get

B_resolver:                                  /* Relay: B -> INTF */
    ldr r12, .P1254180811_Getter
    cmp r10, r12
    beq B_Getter
.P1254180811_Getter: .word Getter

.global main
main:                                        /* Function: main */
    push { lr }
    mov r1, #10
    mov r0, #16                              /* Evaluate Expression */
    stmfd sp!, {r0, r1}
    ldr r0, .P1254180812_B
    push { r0 }
    bl init_P_3                              /* Call init */
    mov r12, #0                              /* Offset to Getter.get */
    push { r12 }
    ldr r12, [r10, r0, lsl #2]
    ldr r12, [r12, #4]
    ldr r10, .P1254180812_Getter
    add lr, pc, #8
    mov pc, r12
    pop { pc }
.P1254180812_Getter: .word Getter
.P1254180812_B: .word B
