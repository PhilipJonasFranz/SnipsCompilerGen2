SOURCE
interface Inter {

	int get();
	
	void set(int val);

}

struct X : Inter {

	int val;
	
	int get() {
		return self->val;
	}
	
	void set(int val) {
		self->val = val;
	}
	
}

int main() {
	X x = X::(25);
	Inter i = &x;
	
	int s = i.get();
	
	i.set(15);
	
	return s + i.get();
}
TESTCASES
40
OUTPUT
.data
X: .word 0

.text
    b main
    
Inter.L0:                                    /* Interface : Inter */
    add r10, r12, #4
    mov r12, #0
    add pc, pc, r10
    b X.get
    b X.set
    
.global X.get
X.get:                                       /* Function: X.get */
    mov r10, #0
    lsl r1, r0, #2                           /* Convert to bytes */
    ldr r0, [r1, #4]                         /* Load field from struct */
    bx lr
    
.global X.set
X.set:                                       /* Function: X.set */
    mov r10, #0
    push { r3 }
    mov r3, r0
    mov r0, r1                               /* Evaluate Expression */
    lsl r1, r3, #2                           /* Convert to bytes */
    str r0, [r1, #4]                         /* Store value to struct field */
    pop { r3 }
    bx lr
    
.global main
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    mov r0, #25                              /* Evaluate Expression */
    push { r0 }
    ldr r0, .POOL0_X
    push { r0 }
    sub r0, fp, #8                           /* Evaluate Expression */
    lsr r3, r0, #2
    mov r0, r3                               /* Evaluate Expression */
    bl Inter.L0                              /* Branch to relay table of Inter */
    mov r4, r0
    mov r1, #15
    mov r0, r3
    mov r12, #4
    bl Inter.L0                              /* Branch to relay table of Inter */
    mov r0, r3                               /* Evaluate Expression */
    bl Inter.L0                              /* Branch to relay table of Inter */
    add r0, r4, r0
    mov sp, fp
    ldmfd sp!, {fp, pc}
.POOL0_X: .word X
