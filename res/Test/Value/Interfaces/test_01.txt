SOURCE
interface Inter {

	int get();
	
	void set(int val);

}

struct X : Inter {

	int val;
	
	int get() {
		return self->val;
	}
	
	void set(int val) {
		self->val = val;
	}
	
}

int main() {
	X x = X::(25);
	Inter i = &x;
	
	int s = i.get();
	
	i.set(15);
	
	return s + i.get();
}
TESTCASES
40
OUTPUT
.version 0

.data
X: .word 0
X_vrelay: .word X_vtable
X_resolver_relay: .word X_resolver
Inter: .word 0
NULL: .word 0
HEAP_START: .word 0

.text
    b main

X_vtable:                                    /* VTable for X */
    mov r12, #0
    add pc, pc, r10
    b X.get
    b X.set

.global X.get
X.get:                                       /* Function: X.get */
    mov r10, #0
    lsl r1, r0, #2                           /* Convert to bytes */
    ldr r0, [r1, #4]                         /* Load field from struct */
    bx lr

.global X.set
X.set:                                       /* Function: X.set */
    mov r10, #0
    push { r4 }
    mov r4, r1
    lsl r1, r0, #2                           /* Convert to bytes */
    str r4, [r1, #4]                         /* Store value to struct field */
    pop { r4 }
    bx lr

X_Inter:                                     /* Relay: Inter -> X */
    mov r10, #0
    pop { r12 }
    add r12, r12, #16
    add r12, r12, pc
    push { r12 }
    mov r12, #0
    pop { pc }
    b X.get
    b X.set

X_resolver:                                  /* Relay: X -> INTF */
    b X_Inter

.global main
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    mov r0, #25                              /* Evaluate Expression */
    push { r0 }
    ldr r0, .P366677129_X
    push { r0 }
    mov r12, #0                              /* Offset to Inter.get */
    sub r0, fp, #8                           /* Evaluate Expression */
    lsr r3, r0, #2
    mov r0, r3                               /* Evaluate Expression */
    push { r12 }
    ldr r12, [r10, r0, lsl #2]
    ldr r12, [r12, #8]
    ldr r10, .P366677129_Inter
    add lr, pc, #8
    mov pc, r12
    mov r12, #4                              /* Offset to Inter.set */
    mov r4, r0
    mov r1, #15
    mov r0, r3
    push { r12 }
    ldr r12, [r10, r0, lsl #2]
    ldr r12, [r12, #8]
    ldr r10, .P366677129_Inter
    add lr, pc, #8
    mov pc, r12
    mov r12, #0                              /* Offset to Inter.get */
    mov r0, r3                               /* Evaluate Expression */
    push { r12 }
    ldr r12, [r10, r0, lsl #2]
    ldr r12, [r12, #8]
    ldr r10, .P366677129_Inter
    add lr, pc, #8
    mov pc, r12
    add r0, r4, r0
    mov sp, fp
    ldmfd sp!, {fp, pc}
.P366677129_Inter: .word Inter
.P366677129_X: .word X
