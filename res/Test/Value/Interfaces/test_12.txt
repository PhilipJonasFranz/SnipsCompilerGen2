SOURCE
interface Getter<K> {

	K get<K>();

}

struct A<V> : Getter<V> {
	V val;
	
	V get<V>() {
		return self->val;
	}
}

struct B<W> : A<W> {
	W val2;
	
	W get<W>() {
		return self->val2;
	}
}

int main(int a) {
	B<int>* b = init<>(B<int>::(10, 16));
	Getter<int> g = b;
	
	return g.get<int>();
}

TESTCASES
16
OUTPUT
.version 0

.include maybe resv.s
.include maybe init.s

.data
B_P_1: .word A_P_1
B_P_1_resolver_relay: .word B_P_1_resolver
A_P_1: .word 0
A_P_1_resolver_relay: .word A_P_1_resolver
Getter_P_1: .word 0
NULL: .word 0
HEAP_START: .word 0

.text
    b main

.global A.get_P_1
A.get_P_1:                                   /* Function: A.get, Provisos: INT */
    mov r10, #0
    lsl r1, r0, #2                           /* Convert to bytes */
    ldr r0, [r1, #4]                         /* Load field from struct */
    bx lr

A_P_1_Getter:                                /* Relay: Getter -> A */
    pop { r12 }
    mov r10, #0
    add r12, r12, #4
    add pc, pc, r12
    b A.get_P_1

A_P_1_resolver:                              /* Relay: A -> INTF */
    ldr r12, .P1282809961_Getter_P_1
    cmp r10, r12
    beq A_P_1_Getter
.P1282809961_Getter_P_1: .word Getter_P_1

.global B.get_P_1
B.get_P_1:                                   /* Function: B.get, Provisos: INT */
    mov r10, #0
    lsl r1, r0, #2                           /* Convert to bytes */
    ldr r0, [r1, #8]                         /* Load field from struct */
    bx lr

B_P_1_Getter:                                /* Relay: Getter -> B */
    pop { r12 }
    mov r10, #0
    add r12, r12, #4
    add pc, pc, r12
    b B.get_P_1

B_P_1_resolver:                              /* Relay: B -> INTF */
    ldr r12, .P1282809962_Getter_P_1
    cmp r10, r12
    beq B_P_1_Getter
.P1282809962_Getter_P_1: .word Getter_P_1

.global main
main:                                        /* Function: main */
    push { lr }
    mov r1, #10
    mov r0, #16                              /* Evaluate Expression */
    stmfd sp!, {r0, r1}
    ldr r0, .P1282809963_B_P_1
    push { r0 }
    bl init_P_3                              /* Call init */
    mov r12, #0                              /* Offset to Getter.get */
    push { r12 }
    ldr r12, [r10, r0, lsl #2]
    ldr r12, [r12, #4]
    ldr r10, .P1282809963_Getter_P_1
    add lr, pc, #8
    mov pc, r12
    pop { pc }
.P1282809963_Getter_P_1: .word Getter_P_1
.P1282809963_B_P_1: .word B_P_1
