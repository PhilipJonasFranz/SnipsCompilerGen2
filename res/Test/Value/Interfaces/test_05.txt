SOURCE
namespace List {

	interface Iterable<Z> {

		int size<Z>();
		
		Z get<Z>(int index);

	}

	restricted struct ListNode<T> {
		ListNode<T>* next;
		T value;
	}
	
	shared struct LinkedList<T> : Iterable<T> {
		ListNode<T>* head;
		ListNode<T>* tail;
		T defValue;
		
		shared void add<T>(T x) {
			ListNode<T>* n = init<>(ListNode<T>::(null, x));
		
			if (self->head == null) {
				self->head = n;
				self->tail = n;
			}
			else {
				self->tail->next = n;
				self->tail = n;
			}	
		}
		
		shared T get<T>(int i) {
			if (i < 0) return self->defValue;
		
			ListNode<T>* n = self->head;
			while (i != 0) {
				if (n->next == null) return self->defValue;
				
				n = n->next;
				i--;
			}
			
			return n->value;	
		}
		
		shared int size<T:void>() {
			ListNode<void>* n = self->head;
			int size = 0;
			while (n != null) {
				n = n->next;
				size++;
			}
			return size;
		}
		
	}
} 

int main() {
	LinkedList<int> l = LinkedList<int>::(null, null, 0);
	
	l.add<int>(12);
	l.add<int>(4);
	l.add<int>(9);
	
	Iterable<int> it = &l;
	
	int size = it.size();
	
	int s = 0;
	for (int i = 0; i < size; i++) 
		s += it.get(i);
	
	return s;
}
TESTCASES
25
OUTPUT
.version 0

.include maybe resv.s
.include maybe init.s

.data
List.LinkedList_P_1: .word 0
List.LinkedList_P_1_resolver_relay: .word List.LinkedList_P_1_resolver
List.ListNode_P_1: .word 0
List.Iterable_P_1: .word 0
NULL: .word 0
HEAP_START: .word 0

.text
    b main

.global List.LinkedList.add_P_1
List.LinkedList.add_P_1:                     /* Function: List.LinkedList.add, Provisos: INT */
    sub sp, sp, #16
    stmea sp, {r3-r5, lr}
    mov r4, r1
    mov r3, r0
    push { r4 }
    ldr r0, .P481193733_NULL                 /* Load null address */
    push { r0 }
    ldr r0, .P481193733_List.ListNode_P_1
    push { r0 }
    bl init_P_3                              /* Call init */
    mov r5, r0
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r0, [r1, #4]                         /* Load field from struct */
    ldr r1, .P481193733_NULL                 /* Load null address */
    cmp r0, r1
    bne List.LinkedList.add_P_1.L1
    lsl r1, r3, #2                           /* Convert to bytes */
    str r5, [r1, #4]                         /* Store value to struct field */
    str r5, [r1, #8]                         /* Store value to struct field */
    ldmfd sp!, {r3-r5, pc}
List.LinkedList.add_P_1.L1: 
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r1, [r1, #8]
    lsl r1, r1, #2
    str r5, [r1, #4]                         /* Store value to struct field */
    lsl r1, r3, #2                           /* Convert to bytes */
    str r5, [r1, #8]                         /* Store value to struct field */
    ldmfd sp!, {r3-r5, pc}
.P481193733_List.ListNode_P_1: .word List.ListNode_P_1
.P481193733_NULL: .word NULL

.global List.LinkedList.get_P_1
List.LinkedList.get_P_1:                     /* Function: List.LinkedList.get, Provisos: INT */
    mov r10, #0
    sub sp, sp, #12
    stmea sp, {r3-r5}
    mov r4, r1
    mov r3, r0
    cmp r1, #0
    bge List.LinkedList.get_P_1.L0
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r0, [r1, #12]                        /* Load field from struct */
    b List.LinkedList.get_P_1.L7
List.LinkedList.get_P_1.L0: 
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r5, [r1, #4]                         /* Load field from struct */
List.LinkedList.get_P_1.L3:                  /* Evaluate condition */
    cmp r4, #0
    beq List.LinkedList.get_P_1.L4
    lsl r1, r5, #2                           /* Convert to bytes */
    ldr r0, [r1, #4]                         /* Load field from struct */
    ldr r1, .P481193734_NULL                 /* Load null address */
    cmp r0, r1
    bne List.LinkedList.get_P_1.L5
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r0, [r1, #12]                        /* Load field from struct */
    b List.LinkedList.get_P_1.L7
List.LinkedList.get_P_1.L5: 
    lsl r1, r5, #2                           /* Convert to bytes */
    ldr r5, [r1, #4]                         /* Load field from struct */
    sub r4, r4, #1
    b List.LinkedList.get_P_1.L3
List.LinkedList.get_P_1.L4: 
    lsl r1, r5, #2                           /* Convert to bytes */
    ldr r0, [r1, #8]                         /* Load field from struct */
List.LinkedList.get_P_1.L7: 
    ldmfd sp!, {r3-r5}
    bx lr
.P481193734_NULL: .word NULL

.global List.LinkedList.size_P_1
List.LinkedList.size_P_1:                    /* Function: List.LinkedList.size, Provisos: INT */
    mov r10, #0
    sub sp, sp, #12
    stmea sp, {r3-r5}
    mov r3, r0
    lsl r1, r0, #2                           /* Convert to bytes */
    ldr r4, [r1, #4]                         /* Load field from struct */
    mov r5, #0
    mov r0, #0                               /* Evaluate Expression */
List.LinkedList.size_P_1.L1:                 /* Evaluate condition */
    ldr r1, .P481193735_NULL                 /* Load null address */
    cmp r4, r1
    beq List.LinkedList.size_P_1.L2
    lsl r1, r4, #2                           /* Convert to bytes */
    ldr r4, [r1, #4]                         /* Load field from struct */
    add r5, r5, #1
    b List.LinkedList.size_P_1.L1
List.LinkedList.size_P_1.L2: 
    mov r0, r5                               /* Evaluate Expression */
    ldmfd sp!, {r3-r5}
    bx lr
.P481193735_NULL: .word NULL

List.LinkedList_P_1_List.Iterable:           /* Relay: List.Iterable -> List.LinkedList */
    pop { r12 }
    mov r10, #0
    add r12, r12, #4
    add pc, pc, r12
    b List.LinkedList.size_P_1
    b List.LinkedList.get_P_1

List.LinkedList_P_1_resolver:                /* Relay: List.LinkedList -> INTF */
    ldr r12, .P481193736_List.Iterable_P_1
    cmp r10, r12
    beq List.LinkedList_P_1_List.Iterable
.P481193736_List.Iterable_P_1: .word List.Iterable_P_1

.global main
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    ldr r1, .P481193737_NULL                 /* Load null address */
    ldr r2, .P481193737_NULL                 /* Load null address */
    mov r0, #0                               /* Evaluate Expression */
    stmfd sp!, {r0-r2}
    ldr r0, .P481193737_List.LinkedList_P_1
    push { r0 }
    mov r1, #12
    sub r0, fp, #16
    lsr r0, r0, #2
    bl List.LinkedList.add_P_1               /* Call List.LinkedList.add */
    mov r1, #4
    sub r0, fp, #16
    lsr r0, r0, #2
    bl List.LinkedList.add_P_1               /* Call List.LinkedList.add */
    mov r1, #9
    sub r0, fp, #16
    lsr r0, r0, #2
    bl List.LinkedList.add_P_1               /* Call List.LinkedList.add */
    mov r12, #0                              /* Offset to List.Iterable.size */
    sub r0, fp, #16                          /* Evaluate Expression */
    lsr r3, r0, #2
    mov r0, r3                               /* Evaluate Expression */
    push { r12 }
    ldr r12, [r10, r0, lsl #2]
    ldr r12, [r12, #4]
    ldr r10, .P481193737_List.Iterable_P_1
    add lr, pc, #8
    mov pc, r12
    mov r6, #0
    mov r5, #0
    mov r4, r0
main.L1: 
    cmp r6, r4
    bge main.L2
    mov r12, #4                              /* Offset to List.Iterable.get */
    mov r1, r6
    mov r0, r3
    push { r12 }
    ldr r12, [r10, r0, lsl #2]
    ldr r12, [r12, #4]
    ldr r10, .P481193737_List.Iterable_P_1
    add lr, pc, #8
    mov pc, r12
    add r6, r6, #1
    add r5, r5, r0
    b main.L1
main.L2: 
    mov r0, r5                               /* Evaluate Expression */
    mov sp, fp
    ldmfd sp!, {fp, pc}
.P481193737_List.Iterable_P_1: .word List.Iterable_P_1
.P481193737_List.LinkedList_P_1: .word List.LinkedList_P_1
.P481193737_NULL: .word NULL
