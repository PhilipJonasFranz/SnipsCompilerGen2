SOURCE
int x = 10;

struct S {
	int x;
}

namespace X {

	int get(S x) {
		if (true) {
			S* s = &x;
			int x = 2;
			s->x <<= 1;
		}
		return x.x;
	}
	
}

int main(int x) {
	return X::get(S::(x));
}
TESTCASES
0 0
1 2
2 4
OUTPUT
.version 8676875111

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
S: .word 0
NULL: .word 0
HEAP_START: .word 0
x: .word 10

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global X.get
X.get:                                       /* Function: X.get */
    push { r3, fp }
    mov fp, sp
    add r0, fp, #8                           /* Evaluate Expression */
    lsr r3, r0, #2
    lsl r1, r3, #2                           /* Convert to bytes */
    add r1, r1, #4
    ldr r2, [r1]
    lsl r0, r2, #1
    str r0, [r1]                             /* Store value to struct field */
    ldr r0, [fp, #12]                        /* Load field from struct */
    mov sp, fp
    ldmfd sp!, {r3, fp}
    add sp, sp, #8
    bx lr

.global main
main:                                        /* Function: main */
    push { r0 }
    ldr r0, .P2138814994_S
    push { r0 }
    b X.get                                  /* Call X.get */
.P2138814994_S: .word S
