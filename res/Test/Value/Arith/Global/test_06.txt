DESCRIPTION
This test verifies global array/struct initialization.
SOURCE
struct S {
	int x;
	int y;
}

S [2] s0 = {S::(10, 5), S::(6, 8)};

int main(int a) {
	return a * (s0 [0].x + s0 [1].y);
}
TESTCASES
0 0
1 18
-2 -36
OUTPUT
.version 12145395863

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
S: .word 0
NULL: .word 0
HEAP_START: .word 0
s0: .skip 24

.text
    b main_init

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global main

/* Initialize the global variables */
main_init: 
    sub sp, sp, #12
    stmea sp, {r0-r2}
    mov r0, #8
    mov r1, #6
    stmfd sp!, {r0, r1}
    ldr r0, .P279599605_S
    push { r0 }
    mov r0, #5
    mov r1, #10
    stmfd sp!, {r0, r1}
    ldr r0, .P279599605_S
    ldr r1, .P279599605_s0                   /* Load from .data section */
    str r0, [r1]
    pop { r0 }
    str r0, [r1, #4]
    pop { r0 }
    str r0, [r1, #8]
    pop { r0 }
    str r0, [r1, #12]
    pop { r0 }
    str r0, [r1, #16]
    pop { r0 }
    str r0, [r1, #20]
    ldmfd sp!, {r0-r2}
main:                                        /* Function: main */
    mov r3, r0
    ldr r1, .P279599605_s0                   /* Evaluate Expression */
    ldr r0, [r1, #4]                         /* Load field from struct */
    ldr r1, .P279599605_s0                   /* Load field location */
    ldr r2, [r1, #20]                        /* Load field from struct */
    add r2, r0, r2
    mul r0, r3, r2
    bx lr
.P279599605_s0: .word s0
.P279599605_S: .word S
