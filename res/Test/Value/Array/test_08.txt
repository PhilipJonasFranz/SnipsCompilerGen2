SOURCE
int bar(int [2] [2] y) {
	return y [1] [1];
}

int foo(int [3] [3] y) {
	return y [2] [2];
}

int main(int b) {
	int [2] [2] x = {{1, 2}, {3, 4}};
	int [3] [3] m = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};
	return bar(x) + b + foo(m);
}
TESTCASES
0 13
4 17
OUTPUT
.data
.text
    b main
    
.global bar
bar:                                         /* Function: bar */
    ldr r0, [sp, #12]
    add sp, sp, #16
    bx lr
    
.global foo
foo:                                         /* Function: foo */
    ldr r0, [sp, #32]
    add sp, sp, #36
    bx lr
    
.global main
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    mov r3, r0
    mov r0, #4                               /* Evaluate Expression */
    mov r1, #3
    stmfd sp!, {r0, r1}
    mov r0, #2
    mov r1, #1
    stmfd sp!, {r0, r1}
    mov r0, #9                               /* Evaluate Expression */
    mov r1, #8
    mov r2, #7
    stmfd sp!, {r0-r2}
    mov r0, #6
    mov r1, #5
    mov r2, #4
    stmfd sp!, {r0-r2}
    mov r0, #3
    mov r1, #2
    mov r2, #1
    stmfd sp!, {r0-r2}
    sub r0, fp, #4
    ldmfa r0, {r0-r2}
    stmfd sp!, {r0-r2}
    ldr r0, [fp, #-16]
    push { r0 }
    bl bar                                   /* Call bar */
    add r4, r0, r3
    sub r0, fp, #20
    ldmfa r0, {r0-r2}
    stmfd sp!, {r0-r2}
    sub r0, fp, #32
    ldmfa r0, {r0-r2}
    stmfd sp!, {r0-r2}
    sub r0, fp, #44
    ldmfa r0, {r0-r2}
    stmfd sp!, {r0-r2}
    bl foo                                   /* Call foo */
    add r0, r4, r0
    mov sp, fp
    ldmfd sp!, {fp, pc}
