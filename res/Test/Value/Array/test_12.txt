SOURCE
int add(int [2] [2] m) {
	return m [0] [0] + m [0] [1] +
		   m [1] [0] + m [1] [1];
}

int main() {
	int [2] [2] m = {{3, 6}, 
	                 {2, 4}};
	return add(m);
}
TESTCASES
15
OUTPUT
.version 16308935863

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global add
add:                                         /* Function: add */
    ldr r0, [sp]
    ldr r2, [sp, #4]
    add r0, r0, r2
    ldr r2, [sp, #8]
    add r0, r0, r2
    ldr r2, [sp, #12]
    add r0, r0, r2
    add sp, sp, #16
    bx lr

.global main
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    mov r0, #4                               /* Evaluate Expression */
    mov r1, #2
    stmfd sp!, {r0, r1}
    mov r0, #6
    mov r1, #3
    stmfd sp!, {r0, r1}
    sub r0, fp, #4
    ldmfa r0, {r0-r2}
    stmfd sp!, {r0-r2}
    ldr r0, [fp, #-16]
    push { r0 }
    bl add                                   /* Call add */
    mov sp, fp
    ldmfd sp!, {fp, pc}
