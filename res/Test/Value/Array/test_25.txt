SOURCE
int [2] [2] vec = {{3, 7}, {2, 0}};

int main(int x, int y) { 
	vec = {{1, 5}, {9, 2}};
	return vec [x] [y];
}
TESTCASES
0 0 1
0 1 5
1 0 9
1 1 2
OUTPUT
.version 16081825802

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
NULL: .word 0

HEAP_START: .word 0

vec: .skip 16

.text
    b main_init

.global main

/* Initialize the global variables */
main_init: 
    sub sp, sp, #12
    stmea sp, {r0-r2}
    mov r0, #0
    mov r1, #2
    stmfd sp!, {r0, r1}
    mov r0, #7
    mov r1, #3
    stmfd sp!, {r0, r1}
    pop { r0 }
    ldr r1, .POOL@1501028918_0_L0_vec        /* Load from .data section */
    str r0, [r1]
    pop { r0 }
    str r0, [r1, #4]
    pop { r0 }
    str r0, [r1, #8]
    pop { r0 }
    str r0, [r1, #12]
    ldmfd sp!, {r0-r2}
main:                                        /* Function: main */
    mov r3, r0
    mov r4, r1
    mov r0, #2                               /* Evaluate Expression */
    mov r1, #9
    stmfd sp!, {r0, r1}
    mov r0, #5
    mov r1, #1
    stmfd sp!, {r0, r1}
    pop { r0 }
    ldr r1, .POOL@1501028918_0_L0_vec
    str r0, [r1]
    pop { r0 }
    str r0, [r1, #4]
    pop { r0 }
    str r0, [r1, #8]
    pop { r0 }
    str r0, [r1, #12]
    mov r2, #0                               /* Evaluate Expression */
    lsl r0, r3, #3
    add r2, r2, r0
    lsl r0, r4, #2
    add r2, r2, r0
    ldr r0, .POOL@1501028918_0_L0_vec        /* Load data section address */
    ldr r0, [r0, r2]
    bx lr
.POOL@1501028918_0_L0_vec: .word vec
