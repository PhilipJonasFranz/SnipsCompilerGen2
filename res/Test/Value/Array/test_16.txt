SOURCE
int main(int x, int y, int z) {
	int [2] [3] [2] m = {{{1, 2}, {3, 4}, {5, 6}}, 
						 {{7, 8}, {9, 10}, {11, 12}}};
						 
	m [0] [1] [1] = 8;
						 
	return m [x] [y] [z];
}
TESTCASES
0 0 0 1
0 0 1 2
0 1 0 3
0 1 1 8
0 2 0 5
0 2 1 6
1 0 0 7
1 0 1 8
1 1 0 9
1 1 1 10
1 2 0 11
1 2 1 12
OUTPUT
.version 26919762801

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global main
main:                                        /* Function: main */
    mov fp, sp
    mov r3, r0
    mov r4, r1
    mov r5, r2
    mov r0, #12                              /* Evaluate Expression */
    mov r1, #11
    stmfd sp!, {r0, r1}
    mov r0, #10
    mov r1, #9
    stmfd sp!, {r0, r1}
    mov r0, #8
    mov r1, #7
    stmfd sp!, {r0, r1}
    mov r0, #6
    mov r1, #5
    stmfd sp!, {r0, r1}
    mov r0, #4
    mov r1, #3
    stmfd sp!, {r0, r1}
    mov r0, #2
    mov r1, #1
    stmfd sp!, {r0, r1}
    mov r1, #8
    str r1, [fp, #-36]
    mov r2, #0                               /* Evaluate Expression */
    mov r1, #24
    mul r0, r3, r1
    add r2, r2, r0
    lsl r0, r4, #3
    add r2, r2, r0
    lsl r0, r5, #2
    add r2, r2, r0
    sub r0, fp, #48
    ldr r0, [r0, r2]
    mov sp, fp
    bx lr
