SOURCE
struct A<X> {
	X x;
}

struct B<T> : A<T> {
	void incr<T>() {
		return self->x++;
	}
}

int main() {
	A<int> a = A<int>::(14);
	A<int>* a0 = &a;
	
	int s = ((B<int>*) a0)->incr();
	return a0->x + s;
}
TESTCASES
29
OUTPUT
.version 18649391504

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
B_P_1: .word A_P_1
lambda_B.incr_P_1: .word B.incr_P_1
A_P_1: .word 0
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global B.incr_P_1
B.incr_P_1:                                  /* Function: B.incr, Provisos: INT */
    lsl r1, r0, #2                           /* Convert to bytes */
    add r1, r1, #4
    ldr r0, [r1]
    add r2, r0, #1
    str r2, [r1]
    bx lr

.global main
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    mov r0, #14                              /* Evaluate Expression */
    push { r0 }
    ldr r0, .P1612777293_A_P_1
    push { r0 }
    sub r0, fp, #8                           /* Evaluate Expression */
    lsr r3, r0, #2
    mov r0, r3                               /* Evaluate Expression */
    bl B.incr_P_1                            /* Call B.incr */
    mov r4, r0
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r1, [r1, #4]                         /* Load field from struct */
    add r0, r1, r4
    mov sp, fp
    ldmfd sp!, {fp, pc}
.P1612777293_A_P_1: .word A_P_1
