SOURCE
struct A<X> {
	X x;
}

struct B<T> : A<T> {
	void incr<T>() {
		return self->x++;
	}
}

int main() {
	A<int> a = A<int>::(14);
	A<int>* a0 = &a;
	
	int s = ((B<int>*) a0)->incr();
	return a0->x + s;
}
TESTCASES
29
OUTPUT
/* --test_12.txt */
    b main
B.incr@0_P0:                                 /* Function: B.incr, Provisos: INT */
    lsl r1, r0, #2                           /* Convert to bytes */
    add r1, r1, #4
    ldr r0, [r1]
    add r2, r0, #1
    str r2, [r1]
    bx lr
    
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    mov r0, #14                              /* Evaluate Expression */
    push { r0 }
    mov r0, #1
    push { r0 }
    sub r0, fp, #8                           /* Evaluate Expression */
    lsr r3, r0, #2
    mov r0, r3                               /* Evaluate Expression */
    bl B.incr@0_P0                           /* Call B.incr */
    mov r4, r0
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r1, [r1, #4]                         /* Load field from struct */
    add r0, r1, r4
    mov sp, fp
    ldmfd sp!, {fp, pc}
    
