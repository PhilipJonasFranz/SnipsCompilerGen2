SOURCE
struct A {
    int x;

    shared int get() {
        return self->x;
    }
}

struct B : A {
    shared int get() {
        return self->x * 2;
    }
}

int main() {
    B b = B::(12);
    A* a = &b;
    return a->get();
}
TESTCASES
24
OUTPUT
.version 0

.data
B: .word A
B_vrelay: .word B_vtable
A: .word 0
A_vrelay: .word A_vtable
NULL: .word 0
HEAP_START: .word 0

.text
    b main

A_vtable:                                    /* VTable for A */
    mov r12, #0
    add pc, pc, r10
    b A.get

.global A.get
A.get:                                       /* Function: A.get */
    mov r10, #0
    lsl r1, r0, #2                           /* Convert to bytes */
    ldr r0, [r1, #4]                         /* Load field from struct */
    bx lr

B_vtable:                                    /* VTable for B */
    mov r12, #0
    add pc, pc, r10
    add r10, r10, r10                        /* Function 'B.get' not called */

.global B.get
B.get:                                       /* Function: B.get */
    mov r10, #0
    lsl r1, r0, #2                           /* Convert to bytes */
    ldr r1, [r1, #4]                         /* Load field from struct */
    lsl r0, r1, #1
    bx lr

.global main
main:                                        /* Function: main */
    mov fp, sp
    mov r0, #12                              /* Evaluate Expression */
    push { r0 }
    ldr r0, .P1670035595_B
    push { r0 }
    sub r0, fp, #8                           /* Evaluate Expression */
    lsr r3, r0, #2
    mov r0, r3                               /* Evaluate Expression */
    ldr r12, [r10, r0, lsl #2]
    mov r10, #4                              /* Offset to A.get */
    ldr pc, [r12, #4]                        /* Dynamic dispatch to VTable */
    mov sp, fp
    bx lr
.P1670035595_B: .word B
