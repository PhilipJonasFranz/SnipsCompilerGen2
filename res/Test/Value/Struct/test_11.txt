SOURCE
struct Capsule<T> {
	T cap;
}

struct Data<T> {
	T value;
	Capsule<T> c;
}

Data<T>* create<T>() {
	Data<T>* pointer = (Data<T>*) resv(sizeof(Data<T>));
	return pointer;
}

int main(int x) {
	Data<int[2]>* data = create<int[2]>();
	*data = Data<int[2]>::({x, x * 2}, Capsule<int[2]>::({3, 4}));
	return data->value [1] + data->c.cap [1];
}
TESTCASES
0 4
1 6
2 8
OUTPUT
.version 3538956119

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
Data_P_2: .word 0
Capsule_P_2: .word 0
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global create_P_2
create_P_2:                                  /* Function: create, Provisos: INT[2] */
    mov r0, #6                               /* Evaluate Expression */
    b resv                                   /* Call resv */

.global main
main:                                        /* Function: main */
    push { lr }
    mov r3, r0
    bl create_P_2                            /* Evaluate Expression */
    mov r4, r0
    mov r0, #4                               /* Evaluate Expression */
    mov r1, #3
    stmfd sp!, {r0, r1}
    ldr r0, .P2052308561_Capsule_P_2
    push { r0 }
    lsl r0, r3, #1
    push { r0 }
    ldr r0, .P2052308561_Data_P_2
    lsl r1, r4, #2
    str r0, [r1]
    str r3, [r1, #4]
    pop { r0 }
    str r0, [r1, #8]
    pop { r0 }
    str r0, [r1, #12]
    pop { r0 }
    str r0, [r1, #16]
    pop { r0 }
    str r0, [r1, #20]
    lsl r1, r4, #2                           /* Convert to bytes */
    ldr r0, [r1, #8]                         /* Load field from struct */
    lsl r1, r4, #2                           /* Convert to bytes */
    ldr r2, [r1, #20]                        /* Load field from struct */
    add r0, r0, r2
    pop { pc }
.P2052308561_Data_P_2: .word Data_P_2
.P2052308561_Capsule_P_2: .word Capsule_P_2
