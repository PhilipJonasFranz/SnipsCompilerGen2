SOURCE
struct Point2D {
	int x;
	int y;
}

struct Line2D {
	Point2D p0;
	Point2D p1;
}

int main(int x) {
	Line2D* l = (Line2D*) resv(sizeof(Line2D));
	*l = Line2D::(Point2D::(x + 2, x * 3), Point2D::(x, x + 1));
	return l->p0.y;
}
TESTCASES
0 0
1 3
5 15
OUTPUT
.data
Line2D: .word 0
Point2D: .word 0
NULL: .word 0
HEAP_START: .word 0

.text
    b main
    
.global main
main:                                        /* Function: main */
    push { lr }
    mov r3, r0
    mov r0, #7                               /* Evaluate Expression */
    bl resv                                  /* Call resv */
    mov r4, r0
    add r0, r3, #1
    push { r0 }
    push { r3 }
    ldr r0, .POOL0_Point2D
    push { r0 }
    mov r2, #3
    mul r0, r3, r2
    push { r0 }
    add r0, r3, #2
    push { r0 }
    ldr r0, .POOL0_Point2D
    push { r0 }
    ldr r0, .POOL0_Line2D
    lsl r1, r4, #2
    str r0, [r1]
    pop { r0 }
    str r0, [r1, #4]
    pop { r0 }
    str r0, [r1, #8]
    pop { r0 }
    str r0, [r1, #12]
    pop { r0 }
    str r0, [r1, #16]
    pop { r0 }
    str r0, [r1, #20]
    pop { r0 }
    str r0, [r1, #24]
    lsl r1, r4, #2                           /* Convert to bytes */
    ldr r0, [r1, #12]                        /* Load field from struct */
    pop { pc }
.POOL0_Line2D: .word Line2D
.POOL0_Point2D: .word Point2D
