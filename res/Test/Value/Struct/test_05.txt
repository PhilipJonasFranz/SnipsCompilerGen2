SOURCE
struct Nib {
	int k;
	int y;
}

struct Test {
	Nib [2] x;
	int y;
}

int main() {
	Test* test = (Test*) resv(sizeof(Test));
	*test = Test::({Nib::(2, 9), Nib::(8, 9)}, 5);
	Nib n0 = test->x [1];
	return n0.y + test->y;
}
TESTCASES
14
OUTPUT
.version -7350481715

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
Test: .word 0
Nib: .word 0
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global main
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    mov r0, #8                               /* Evaluate Expression */
    bl resv                                  /* Call resv */
    mov r3, r0
    mov r0, #5                               /* Evaluate Expression */
    push { r0 }
    mov r0, #9
    mov r1, #8
    stmfd sp!, {r0, r1}
    ldr r0, .P1469671658_Nib
    push { r0 }
    mov r0, #9
    mov r1, #2
    stmfd sp!, {r0, r1}
    ldr r0, .P1469671658_Nib
    push { r0 }
    ldr r0, .P1469671658_Test
    lsl r1, r3, #2
    str r0, [r1]
    pop { r0 }
    str r0, [r1, #4]
    pop { r0 }
    str r0, [r1, #8]
    pop { r0 }
    str r0, [r1, #12]
    pop { r0 }
    str r0, [r1, #16]
    pop { r0 }
    str r0, [r1, #20]
    pop { r0 }
    str r0, [r1, #24]
    pop { r0 }
    str r0, [r1, #28]
    lsl r1, r3, #2                           /* Convert to bytes */
    add r1, r1, #16
    ldr r0, [r1, #8]
    ldr r2, [r1, #4]
    stmfd sp!, {r0, r2}
    ldr r0, [r1]
    push { r0 }
    ldr r0, [fp, #-4]                        /* Load field from struct */
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r2, [r1, #28]                        /* Load field from struct */
    add r0, r0, r2
    mov sp, fp
    ldmfd sp!, {fp, pc}
.P1469671658_Test: .word Test
.P1469671658_Nib: .word Nib
