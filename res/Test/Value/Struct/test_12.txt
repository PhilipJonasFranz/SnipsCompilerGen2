SOURCE
#include<linked_list.sn>

int main(int x) {
	LinkedList<int>* l = create<int>(0);
	
	l->add<int>(10);
	l->add<int>(5);
	l->add<int>(12);
	
	int r = l->get<int>(x);
	
	l->destroy();
	
	return r;
}
TESTCASES
0 10
1 5
2 12
OUTPUT
.version 13489038683

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s
.include linked_list.s

.data
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global main
main:                                        /* Function: main */
    push { lr }
    mov r3, r0
    mov r0, #0                               /* Evaluate Expression */
    bl List.LinkedList.create_P_1            /* Call List.LinkedList.create */
    mov r4, r0
    mov r1, #10
    mov r0, r4
    bl List.LinkedList.add_P_1               /* Call List.LinkedList.add */
    mov r1, #5
    mov r0, r4
    bl List.LinkedList.add_P_1               /* Call List.LinkedList.add */
    mov r1, #12
    mov r0, r4
    bl List.LinkedList.add_P_1               /* Call List.LinkedList.add */
    mov r0, r4
    mov r1, r3
    bl List.LinkedList.get_P_1               /* Call List.LinkedList.get */
    mov r5, r0
    mov r0, r4                               /* Load parameters */
    bl List.LinkedList.destroy_P_1           /* Call List.LinkedList.destroy */
    mov r0, r5                               /* Evaluate Expression */
    pop { pc }
