SOURCE
#include<linked_list.sn>
#include<binary_tree.sn>

int relation(int x, int y) {
	return (x == y)? 0 : ((x < y)? -1 : 1);
}

int main() {
	LinkedList<int>* list = LinkedList::create<int>(0);
	
	list->add<int>(10);
	
	TreeNode<int>* root = TreeNode::create<int>(10);
	
	root->insert<int>(relation, 5);
	root->insert<int>(relation, 12);
	
	root->delete<int>(relation, 12);
	
	return list->get<int>(0);
}

TESTCASES
10
OUTPUT
.version 26420113946

.include maybe resv.s
.include maybe init.s
.include maybe free.s
.include binary_tree.s
.include linked_list.s

.data
NULL: .word 0
HEAP_START: .word 0

.text
    b main

.global relation
relation:                                    /* Function: relation */
    push { r3, r4 }
    mov r3, r0
    mov r4, r1
    cmp r0, r1
    bne relation.L0
    mov r0, #0
    b relation.L3
relation.L0: 
    cmp r3, r4
    bge relation.L2
    mvn r0, #0
    b relation.L3
relation.L2: 
    mov r0, #1
relation.L3: 
    ldmfd sp!, {r3, r4}
    bx lr

.global main
main:                                        /* Function: main */
    push { lr }
    mov r0, #0                               /* Evaluate Expression */
    bl List.LinkedList.create_P_1            /* Call List.LinkedList.create */
    mov r3, r0
    mov r1, #10
    mov r0, r3
    bl List.LinkedList.add_P_1               /* Call List.LinkedList.add */
    mov r0, #10                              /* Evaluate Expression */
    bl Tree.TreeNode.create_P_1              /* Call Tree.TreeNode.create */
    mov r4, r0
    mov r0, #5                               /* Load parameters */
    push { r0 }
    ldr r0, .P455223773_relation
    push { r0 }
    mov r0, r4
    ldmfd sp!, {r1, r2}
    bl Tree.TreeNode.insert_P_1              /* Call Tree.TreeNode.insert */
    mov r0, #12                              /* Load parameters */
    push { r0 }
    ldr r0, .P455223773_relation
    push { r0 }
    mov r0, r4
    ldmfd sp!, {r1, r2}
    bl Tree.TreeNode.insert_P_1              /* Call Tree.TreeNode.insert */
    mov r0, #12                              /* Load parameters */
    push { r0 }
    ldr r0, .P455223773_relation
    push { r0 }
    mov r0, r4
    ldmfd sp!, {r1, r2}
    bl Tree.TreeNode.delete_P_1              /* Call Tree.TreeNode.delete */
    mov r1, #0
    mov r0, r3
    bl List.LinkedList.get_P_1               /* Call List.LinkedList.get */
    pop { pc }
.P455223773_relation: .word relation
