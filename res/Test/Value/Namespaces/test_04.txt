SOURCE
namespace Foo {
	int x = 15;
	
	struct Bar {
		int k;
	}
	
	namespace Baz {
		int x = 10;
		
		int get(Bar bar) {
			return sizeof(bar) << 1;
		}
	}
	
	int get(Bar bar) {
		return bar.k;
	}
	
}

int main() {
	Bar bar = Bar::(5);
	return Foo::get(bar) + Foo::Baz::x;
}

TESTCASES
15
OUTPUT
.version 13931144723

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
Foo.Bar: .word 0
NULL: .word 0
HEAP_START: .word 0
Foo.Baz.x: .word 10
Foo.x: .word 15

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global Foo.get
Foo.get:                                     /* Function: Foo.get */
    ldr r0, [sp, #4]                         /* Load field from struct */
    add sp, sp, #8
    bx lr

.global main
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    mov r0, #5                               /* Evaluate Expression */
    push { r0 }
    ldr r0, .P598369528_Foo.Bar
    push { r0 }
    ldr r0, [fp, #-4]                        /* Evaluate Expression */
    ldr r1, [fp, #-8]
    stmfd sp!, {r0, r1}
    bl Foo.get                               /* Call Foo.get */
    mov r1, r0
    ldr r2, .P598369528_Foo.Baz.x            /* Load from .data section */
    ldr r2, [r2]
    add r0, r0, r2
    mov sp, fp
    ldmfd sp!, {fp, pc}
.P598369528_Foo.Baz.x: .word Foo.Baz.x
.P598369528_Foo.Bar: .word Foo.Bar
