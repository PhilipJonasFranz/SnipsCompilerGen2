SOURCE
void incr(int* p) {
	*p = *p + 1;
}
int main() {
	int cnt = 0;
	for (int i = 0; i < 10; i++) {
		cnt++;
		incr(&i);
	}
	
	return cnt;
}
TESTCASES
5
OUTPUT
.version 16855727110

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global incr
incr:                                        /* Function: incr */
    push { r3 }
    mov r3, r0
    ldr r1, [r10, r0, lsl #2]                /* Load from address */
    add r0, r1, #1
    str r0, [r10, r3, lsl #2]
    pop { r3 }
    bx lr

.global main
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    mov r3, #0
    mov r4, #0
    push { r4 }
main.L1: 
    ldr r0, [fp, #-4]
    cmp r0, #10
    bge main.L2
    add r3, r3, #1
    sub r0, fp, #4                           /* Load parameters */
    lsr r0, r0, #2
    bl incr                                  /* Call incr */
    ldr r0, [fp, #-4]
    add r1, r0, #1
    str r1, [fp, #-4]
    b main.L1
main.L2: 
    add sp, sp, #4
    mov r0, r3                               /* Evaluate Expression */
    mov sp, fp
    ldmfd sp!, {fp, pc}
