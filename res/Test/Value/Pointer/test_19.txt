SOURCE
void set(int** p) {
		/* Set m [0] [1] */
	*(*p + 1) = 8;
	
		/* Set m [1] [0] */
	**(p + 1) = 7;
}

int main() {
	int [2] [2] m = {{3, 6}, {1, 2}};
	int*[2] p = {&m[0], &m[1]};
	set(&p);
	return m [0] [1] + m [1] [1];
}
TESTCASES
10
OUTPUT
.version 0

.data
NULL: .word 0
HEAP_START: .word 0

.text
    b main

.global set
set:                                         /* Function: set */
    push { r3 }
/* Set m [0] [1] */
    mov r3, r0
    mov r0, #8                               /* Evaluate Expression */
    push { r0 }
    ldr r1, [r10, r3, lsl #2]                /* Load from address */
    add r0, r1, #1
    lsl r1, r0, #2
    pop { r0 }
    str r0, [r1]
/* Set m [1] [0] */
    mov r0, #7                               /* Evaluate Expression */
    push { r0 }
    add r0, r3, #1
    ldr r0, [r10, r0, lsl #2]                /* Load from address */
    lsl r1, r0, #2
    pop { r0 }
    str r0, [r1]
    pop { r3 }
    bx lr

.global main
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    mov r1, #1
    mov r0, #2                               /* Evaluate Expression */
    stmfd sp!, {r0, r1}
    mov r1, #3
    mov r0, #6
    stmfd sp!, {r0, r1}
    sub r0, fp, #8
    lsr r0, r0, #2
    push { r0 }
    sub r0, fp, #16
    lsr r0, r0, #2
    push { r0 }
    sub r0, fp, #24                          /* Load parameters */
    lsr r0, r0, #2
    bl set                                   /* Call set */
    ldr r0, [fp, #-12]
    ldr r2, [fp, #-4]
    add r0, r0, r2
    mov sp, fp
    ldmfd sp!, {fp, pc}
