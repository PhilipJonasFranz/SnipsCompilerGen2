SOURCE
void set(int* p, int [2] v) {
	*p = v;
	return;
}

int main(int x, int y) {
	int [2] [2] v = {{1, 2}, {3, 4}};
	set(&v, {5, 6});
	return v [x] [y];
}
TESTCASES
0 0 5
0 1 6
1 0 3
1 1 4
OUTPUT
.version 14943021445

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global set
set:                                         /* Function: set */
    push { r3, fp }
    mov fp, sp
    mov r3, r0
    ldr r0, [fp, #12]                        /* Evaluate Expression */
    ldr r1, [fp, #8]
    stmfd sp!, {r0, r1}
    pop { r0 }
    lsl r1, r3, #2
    str r0, [r1]
    pop { r0 }
    str r0, [r1, #4]
    mov sp, fp
    ldmfd sp!, {r3, fp}
    add sp, sp, #8
    bx lr

.global main
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    mov r3, r0
    mov r4, r1
    mov r0, #4                               /* Evaluate Expression */
    mov r1, #3
    stmfd sp!, {r0, r1}
    mov r0, #2
    mov r1, #1
    stmfd sp!, {r0, r1}
    mov r0, #6                               /* Load parameters */
    mov r1, #5
    stmfd sp!, {r0, r1}
    sub r0, fp, #16
    lsr r0, r0, #2
    bl set                                   /* Call set */
    mov r2, #0                               /* Evaluate Expression */
    lsl r0, r3, #3
    add r2, r2, r0
    lsl r0, r4, #2
    add r2, r2, r0
    sub r0, fp, #16
    ldr r0, [r0, r2]
    mov sp, fp
    ldmfd sp!, {fp, pc}
