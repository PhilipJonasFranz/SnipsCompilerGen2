SOURCE
struct AX {
	int x0;
}

struct A {
	int x;
}

struct B : A {
	int y;
}

struct C : B {
	int z;
}

struct D : B {
	bool b;
}

struct E : A {
	bool k;
}

struct F : E {
	bool k0;
}

struct G : A {
	int x0;
}

struct H : G {
	int y0;
}

struct I : G {
	int j0;
}

struct J : G {
	int j;
}

struct AY {
	int y0;
}

int main() {
	return (int) isa(idof(C), idof(A));
}
TESTCASES
1
OUTPUT
.version 0

.include maybe isa.s

.data
AY: .word 0
AY_vrelay: .word 0
J: .word G
J_vrelay: .word 0
I: .word G
I_vrelay: .word 0
H: .word G
H_vrelay: .word 0
G: .word A
G_vrelay: .word 0
F: .word E
F_vrelay: .word 0
E: .word A
E_vrelay: .word 0
D: .word B
D_vrelay: .word 0
C: .word B
C_vrelay: .word 0
B: .word A
B_vrelay: .word 0
A: .word 0
A_vrelay: .word 0
AX: .word 0
AX_vrelay: .word 0
NULL: .word 0
HEAP_START: .word 0

.text
    b main

.global main
main:                                        /* Function: main */
    ldr r1, .P2034066697_A                   /* Evaluate Expression */
    ldr r0, .P2034066697_C
    b isa                                    /* Call isa */
.P2034066697_C: .word C
.P2034066697_A: .word A
