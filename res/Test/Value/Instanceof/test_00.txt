SOURCE
struct A {
	int x;
}

struct B {
	int y;
}

int main() {
	A a = A::(10);
	void* p = &a;
	return (int) isar(p, idof(A));
}
TESTCASES
1
OUTPUT
.version 8809298717

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
B: .word 0
A: .word 0
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global main
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    mov r0, #10                              /* Evaluate Expression */
    push { r0 }
    ldr r0, .P2062695848_A
    push { r0 }
    sub r0, fp, #8                           /* Evaluate Expression */
    lsr r3, r0, #2
    ldr r1, .P2062695848_A                   /* Evaluate Expression */
    mov r0, r3
    bl isar                                  /* Call isar */
    mov sp, fp
    ldmfd sp!, {fp, pc}
.P2062695848_A: .word A
