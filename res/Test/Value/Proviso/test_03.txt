SOURCE
int getDiff<K, V>(K k, V v) {
	int f = (int) k;
	if (f == 0) return (int) v;
	else return getDiff<V, K>((K) v, (V) (k - 1));
}

int main(int x, int y) {
	return getDiff<int, int>(x, y);
}
TESTCASES
5 1 3
1 5 4
0 1 1
OUTPUT
.version 15815068934

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global getDiff_P_1_1
getDiff_P_1_1:                               /* Function: getDiff, Provisos: INT, INT */
    sub sp, sp, #16
    stmea sp, {r3-r5, lr}
    mov r3, r0
    mov r4, r1
    mov r5, r0
    cmp r5, #0
    bne getDiff_P_1_1.L1
    mov r0, r4                               /* Evaluate Expression */
    ldmfd sp!, {r3-r5, pc}
getDiff_P_1_1.L1: 
    sub r1, r3, #1
    mov r0, r4
    bl getDiff_P_1_1                         /* Call getDiff */
    ldmfd sp!, {r3-r5, pc}

.global main
main:                                        /* Function: main */
    b getDiff_P_1_1                          /* Call getDiff */
