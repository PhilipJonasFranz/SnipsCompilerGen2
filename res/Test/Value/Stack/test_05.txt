DESCRIPTION
Provocate a RegStack Overflow, so b7 is stored on the stack. This way stack accesses can be
tested.
SOURCE
int main(int a) {
	int b0 = a + 0;
	int b1 = a + 1;
	int b2 = a + 2;
	int b3 = a + 3;
	int b4 = a + 4;
	int b5 = a + 5;
	int b6 = a + 6;
	int b7 = a + 7;
	return b0 + b1 + b2 + b3 + b4 + b5 + b6 + b7;
}
TESTCASES
0 28
2 44
OUTPUT
.version 14034412502

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global main
main:                                        /* Function: main */
    lsl r1, r0, #3
    add r0, r1, #28
    bx lr
