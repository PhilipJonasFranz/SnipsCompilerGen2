SOURCE
int main(int a, int b) {
	if (a == 3) {
		int [3] arr = {a, b, 5};
		return a + b + arr [2];
	}
	else if (a == 4) {
		int [4] arr = {a, b, 5, 12};
		return a + b + arr [3];
	}
	
	return a;
}
TESTCASES
0 0 0
3 2 10
4 2 18
OUTPUT
.version 12974970308

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global main
main:                                        /* Function: main */
    mov fp, sp
    mov r3, r0
    mov r4, r1
    cmp r0, #3
    bne main.L1
    mov r0, #5                               /* Evaluate Expression */
    push { r0 }
    push { r4 }
    mov r0, #3
    push { r0 }
    ldr r2, [fp, #-4]
    add r1, r4, r2
    add r0, r1, #3
    b main.L3
main.L1: 
    cmp r3, #4
    bne main.L0
    mov r0, #12                              /* Evaluate Expression */
    mov r1, #5
    stmfd sp!, {r0, r1}
    push { r4 }
    mov r0, #4
    push { r0 }
    ldr r2, [fp, #-4]
    add r1, r4, r2
    add r0, r1, #4
    b main.L3
main.L0: 
    mov r0, r3                               /* Evaluate Expression */
main.L3: 
    mov sp, fp
    bx lr
