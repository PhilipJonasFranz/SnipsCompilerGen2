DESCRIPTION
Tests for-each loop iterator writeback using pointer access.
SOURCE
int fib(int n) {
	int* arr = resv(n);
	
	int c = 0;
	for [int i : arr, n] {
		if (c < 2) i = 1;
		else i = *(arr + c - 1) + *(arr + c - 2);
		c++;
	}
	
	return *(arr + n - 1);
}

int main(int n) {
	return fib(n);
}
TESTCASES
1 1
2 1
3 2
4 3
5 5
8 21
10 55
OUTPUT
.version 0

.include maybe resv.s

.data
NULL: .word 0
HEAP_START: .word 0

.text
    b main

.global fib
fib:                                         /* Function: fib */
    sub sp, sp, #28
    stmea sp, {r3-r8, lr}
    mov r3, r0
    bl resv                                  /* Call resv */
    mov r7, #0
    mov r6, #0
    mov r5, #0
    mov r4, r0
fib.L1: 
    cmp r3, r6
    beq fib.L2
    mov r8, r1
    add r0, r4, r6
    ldr r7, [r10, r0, lsl #2]                /* Load from address */
    cmp r5, #2
    bge fib.L4
    mov r7, #1
    mov r0, #1                               /* Evaluate Expression */
    b fib.L3
fib.L4: 
    add r1, r4, r5
    sub r0, r1, #1
    ldr r0, [r10, r0, lsl #2]                /* Load from address */
    push { r0 }
    sub r0, r1, #2
    pop { r1 }
    ldr r2, [r10, r0, lsl #2]                /* Load from address */
    add r7, r1, r2
fib.L3: 
    add r5, r5, #1
    add r0, r4, r6
    str r7, [r10, r0, lsl #2]
    add r6, r6, #1
    b fib.L1
fib.L2: 
    add r1, r4, r3
    sub r0, r1, #1
    ldr r0, [r10, r0, lsl #2]                /* Load from address */
    ldmfd sp!, {r3-r8, pc}

.global main
main:                                        /* Function: main */
    b fib                                    /* Call fib */
