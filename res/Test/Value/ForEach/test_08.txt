SOURCE
int main() {
	int [4] arr = {5, 3, 2, 6};
	
	for (int i : arr)
		i += 10;
		
	for [int i : arr]
		i += 10;
	
	int sum = 0;
	for (int i : arr) 
		sum += i;
		
	return sum;
}
TESTCASES
56
OUTPUT
.version 17519486136

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

.global main
main:                                        /* Function: main */
    mov fp, sp
    mov r0, #6                               /* Evaluate Expression */
    mov r1, #2
    mov r2, #3
    stmfd sp!, {r0-r2}
    mov r0, #5
    push { r0 }
    mov r0, #0                               /* Evaluate Expression */
    mov r3, #0
    mov r4, #0
main.L1: 
    cmp r3, #4
    beq main.L2
    lsl r2, r3, #2
    sub r0, fp, #16
    ldr r4, [r0, r2]
    add r4, r4, #10
    add r3, r3, #1
    b main.L1
main.L2: 
    mov r0, #0                               /* Evaluate Expression */
    mov r3, #0
    mov r4, #0
main.L4: 
    cmp r3, #4
    beq main.L5
    lsl r2, r3, #2
    sub r0, fp, #16
    ldr r4, [r0, r2]
    add r4, r4, #10
    lsl r2, r3, #2
    sub r0, fp, #16
    str r4, [r0, r2]
    add r3, r3, #1
    b main.L4
main.L5: 
    mov r3, #0
    mov r0, #0                               /* Evaluate Expression */
    mov r4, #0
    mov r5, #0
main.L7: 
    cmp r4, #4
    beq main.L8
    lsl r2, r4, #2
    sub r0, fp, #16
    ldr r5, [r0, r2]
    add r3, r3, r5
    add r4, r4, #1
    b main.L7
main.L8: 
    mov r0, r3                               /* Evaluate Expression */
    mov sp, fp
    bx lr
