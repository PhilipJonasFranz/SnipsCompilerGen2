SOURCE
interface Getter<T> {
	T get();
	
	T get(bool b);
}

struct X<V> : Getter<V> {
	V val;
	
	V get() {
		return self->val;
	}
	
	V get(bool mult) {
		return (mult)? self->val * 2 : 2;
	}
}

int main(bool b) {
	X<int> x = X<int>::(10);
	Getter<int> g = &x;
	
	return g.get() + g.get(b);
}
TESTCASES
0 12
1 30
OUTPUT
.version 26706628581

.include maybe __op_div.s
.include maybe __op_mod.s
.include maybe resv.s
.include maybe isa.s
.include maybe init.s
.include maybe hsize.s
.include maybe free.s

.data
X: .word 0
NULL: .word 0
HEAP_START: .word 0

.text
    b main

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

Getter.L0_P_1:                               /* Interface : Getter, Provisos: INT,  */
    add r10, r12, #4
    mov r12, #0
    add pc, pc, r10
    b X.get@2_P_1
    b X.get@3_P_1

.global X.get@2_P_1
X.get@2_P_1:                                 /* Function: X.get, Provisos: INT */
    mov r10, #0
    lsl r1, r0, #2                           /* Convert to bytes */
    ldr r0, [r1, #4]                         /* Load field from struct */
    bx lr

.global X.get@3_P_1
X.get@3_P_1:                                 /* Function: X.get, Provisos: INT */
    mov r10, #0
    push { r3 }
    mov r3, r0
    cmp r1, #0
    beq X.get_P_1@3.L0
    lsl r1, r3, #2                           /* Convert to bytes */
    ldr r1, [r1, #4]                         /* Load field from struct */
    lsl r0, r1, #1
    b X.get_P_1@3.L1
X.get_P_1@3.L0: 
    mov r0, #2
X.get_P_1@3.L1: 
    pop { r3 }
    bx lr

.global main
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    mov r3, r0
    mov r0, #10                              /* Evaluate Expression */
    push { r0 }
    ldr r0, .P1144089514_X
    push { r0 }
    sub r0, fp, #8                           /* Evaluate Expression */
    lsr r4, r0, #2
    mov r0, r4                               /* Evaluate Expression */
    bl Getter.L0_P_1                         /* Branch to relay table of Getter */
    mov r5, r0
    mov r0, r4
    mov r1, r3
    mov r12, #4
    bl Getter.L0_P_1                         /* Branch to relay table of Getter */
    add r0, r5, r0
    mov sp, fp
    ldmfd sp!, {fp, pc}
.P1144089514_X: .word X
