SOURCE
#include <cmplx.sn>

float main() {
	cmplx c0 = cmplx::create(1f, 0f);
	cmplx c1 = cmplx::create(5.5f, 3f);
	
	cmplx r = c0 + c1;
	
	return r.real;
}

TESTCASES
6.5
OUTPUT
.version 0

.include cmplx.s

.data
NULL: .word 0
HEAP_START: .word 0

.text
    b main

.global main
main:                                        /* Function: main */
    push { fp, lr }
    mov fp, sp
    vmov.F32 s1, #0
    vldr s0, .P1351326485_LIT_1065353216     /* Load value '1.0' from pool */
    bl Cmplx.cmplx.create                    /* Call Cmplx.cmplx.create */
    vldr s1, .P1351326485_LIT_1077936128
    vldr s0, .P1351326485_LIT_1085276160     /* Load value '5.5' from pool */
    bl Cmplx.cmplx.create                    /* Call Cmplx.cmplx.create */
    sub r0, fp, #4
    ldmfa r0, {r0-r2}
    stmfd sp!, {r0-r2}
    sub r0, fp, #16
    ldmfa r0, {r0-r2}
    stmfd sp!, {r0-r2}
    bl Cmplx.op_add_1222274617               /* Call Cmplx.op_add */
    vldr s0, [fp, #-32]                      /* Load field from struct */
    mov sp, fp
    ldmfd sp!, {fp, pc}
.P1351326485_LIT_1085276160: .word 1085276160
.P1351326485_LIT_1077936128: .word 1077936128
.P1351326485_LIT_1065353216: .word 1065353216

/* System Routine, used to copy memory on the stack */
_routine_stack_copy_: 
    cmp r0, #0
    beq _routine_stack_copy_end_
    ldr r2, [r1, #-4]!
    sub r0, r0, #4
    push { r2 }
    b _routine_stack_copy_
_routine_stack_copy_end_: 
    mov pc, r10

