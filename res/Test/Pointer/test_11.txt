SOURCE
void set(int* p, int [2] v) {
	*(p + 2) = v [1];
	*(p + 3) = v [0];
	return;
}

int main(int x, int y) {
	int [2] [2] v = {{1, 2}, {3, 4}};
	set(&v, {5, 6});
	return v [x] [y];
}
TESTCASES
0 0 1
0 1 2
1 0 6
1 1 5
OUTPUT
/* --test_11.txt */
    b main
set:                                         /* Function: set */
    push { r3, fp }
    mov fp, sp
    mov r3, r0
    add r0, fp, #8
    add r0, r0, #4
    ldr r0, [r0]
    push { r0 }
    add r0, r3, #2
    lsl r1, r0, #2
    pop { r0 }
    str r0, [r1]
    add r0, fp, #8
    add r0, r0, #0
    ldr r0, [r0]
    push { r0 }
    add r0, r3, #3
    lsl r1, r0, #2
    pop { r0 }
    str r0, [r1]
    mov sp, fp
    pop { r3, fp }
    add sp, sp, #8
    bx lr
    
main:                                        /* Function: main */
    push { r3, r4, fp, lr }
    mov fp, sp
    mov r3, r0
    mov r4, r1
    mov r0, #4                               /* Evaluate Expression */
    mov r1, #3
    push { r1, r0 }
    mov r0, #2
    mov r1, #1
    push { r1, r0 }
    mov r0, #6                               /* Load parameters */
    mov r1, #5
    push { r1, r0 }
    sub r0, fp, #16
    lsr r0, r0, #2
    bl set                                   /* Call set */
    mov r2, #0                               /* Evaluate Expression */
    mov r0, r3
    mov r1, #8
    mul r0, r0, r1
    add r2, r2, r0
    lsl r0, r4, #2
    add r2, r2, r0
    sub r0, fp, #16
    add r0, r0, r2
    ldr r0, [r0]
    mov sp, fp
    pop { r3, r4, fp, lr }
    bx lr
    
