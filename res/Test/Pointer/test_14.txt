SOURCE
int get(int* p) {
	return *p;
}

int shift(int* p, int off) {
	p = p + off;
	return get(p);
}

int main(int off) {
	int [2] [2] v = {{5, 3}, {9, 1}};
	return shift(&v, off);
}
TESTCASES
0 5
1 3
2 9
3 1
OUTPUT
/* --test_14.txt */
.data
HEAP_START: .word 0
    
.text
    b main
get:                          /* Function: get */
    push { r3 }
    mov r3, r0
    lsl r0, r3, #2            /* Convert to bytes */
    ldr r0, [r0]              /* Load from address */
    pop { r3 }
    bx lr
    
shift:                        /* Function: shift */
    push { r3, r4, fp, lr }
    mov fp, sp
    mov r3, r0
    mov r4, r1
    add r3, r3, r4
    mov r0, r3                /* Evaluate Expression */
    bl get                    /* Call get */
    mov sp, fp
    pop { r3, r4, fp, lr }
    bx lr
    
main:                         /* Function: main */
    push { r3, fp, lr }
    mov fp, sp
    mov r3, r0
    mov r0, #1                /* Evaluate Expression */
    mov r1, #9
    push { r1, r0 }
    mov r0, #3
    mov r1, #5
    push { r1, r0 }
    mov r0, r3                /* Evaluate Expression */
    push { r0 }
    sub r0, fp, #16
    lsr r0, r0, #2
    pop { r1 }
    bl shift                  /* Call shift */
    mov sp, fp
    pop { r3, fp, lr }
    bx lr
    
main.L0_HEAP_START: .word HEAP_START
