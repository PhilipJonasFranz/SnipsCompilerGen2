SOURCE
int get(int* p, int x, int y) {
	return *(p + (x << 1) + y);
}

int main(int x, int y) {
	int [2] [2] v = {{1, 2}, {3, 4}};
	return get(&v, x, y);
}
TESTCASES
0 0 1
0 1 2
1 0 3
1 1 4
OUTPUT
/* --test_00.txt */
.data
HEAP_START: .word 0
    
.text
    b main
get:                          /* Function: get */
    push { r3, r4, r5 }
    mov r3, r0
    mov r4, r1
    mov r5, r2
    lsl r2, r4, #1
    add r1, r3, r2
    add r0, r1, r5
    lsl r0, r0, #2            /* Convert to bytes */
    ldr r0, [r0]              /* Load from address */
    pop { r3, r4, r5 }
    bx lr
    
main:                         /* Function: main */
    push { r3, r4, fp, lr }
    mov fp, sp
    mov r3, r0
    mov r4, r1
    mov r0, #4                /* Evaluate Expression */
    mov r1, #3
    push { r1, r0 }
    mov r0, #2
    mov r1, #1
    push { r1, r0 }
    mov r0, r4                /* Evaluate Expression */
    push { r0 }
    mov r0, r3
    push { r0 }
    sub r0, fp, #16
    lsr r0, r0, #2
    pop { r1, r2 }
    bl get                    /* Call get */
    mov sp, fp
    pop { r3, r4, fp, lr }
    bx lr
    
main.L0_HEAP_START: .word HEAP_START
