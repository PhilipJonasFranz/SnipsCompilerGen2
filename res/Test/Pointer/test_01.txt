SOURCE
int get(int* p, int* q, int i) {
	return *(p + i) + *(q + i);
}

int main(int i) {
	int [3] v = {3, 6, 7};
	int [3] w = {1, 2, 4};
	return get(&v, &w, i);
}
TESTCASES
0 4
1 8
2 11
OUTPUT
/* --test_01.txt */
.data
HEAP_START: .word 0
    
.text
    b main
get:                          /* Function: get */
    push { r3, r4, r5 }
    mov r3, r0
    mov r4, r1
    mov r5, r2
    add r0, r3, r5
    lsl r0, r0, #2            /* Convert to bytes */
    ldr r0, [r0]              /* Load from address */
    push { r0 }
    add r0, r4, r5
    lsl r0, r0, #2            /* Convert to bytes */
    ldr r0, [r0]              /* Load from address */
    mov r2, r0
    pop { r1 }
    add r0, r1, r2
    pop { r3, r4, r5 }
    bx lr
    
main:                         /* Function: main */
    push { r3, fp, lr }
    mov fp, sp
    mov r3, r0
    mov r0, #7                /* Evaluate Expression */
    mov r1, #6
    mov r2, #3
    push { r2, r1, r0 }
    mov r0, #4                /* Evaluate Expression */
    mov r1, #2
    mov r2, #1
    push { r2, r1, r0 }
    mov r0, r3                /* Evaluate Expression */
    push { r0 }
    sub r0, fp, #24
    lsr r0, r0, #2
    push { r0 }
    sub r0, fp, #12
    lsr r0, r0, #2
    pop { r1, r2 }
    bl get                    /* Call get */
    mov sp, fp
    pop { r3, fp, lr }
    bx lr
    
.L0_HEAP_START: .word HEAP_START
